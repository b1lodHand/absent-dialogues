{
  "api/com.absence.dialoguesystem.Blackboard.html": {
    "href": "api/com.absence.dialoguesystem.Blackboard.html",
    "title": "Class Blackboard | absent-dialogues",
    "keywords": "Class Blackboard Inheritance object Blackboard Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class Blackboard Fields | Edit this page View Source Bank Declaration [HideInInspector] public VariableBank Bank Field Value Type Description VariableBank | Edit this page View Source MasterDialogue Declaration [HideInInspector] public Dialogue MasterDialogue Field Value Type Description Dialogue"
  },
  "api/com.absence.dialoguesystem.Dialogue.html": {
    "href": "api/com.absence.dialoguesystem.Dialogue.html",
    "title": "Class Dialogue | absent-dialogues",
    "keywords": "Class Dialogue The scriptable object derived type that holds all of the data which is essential for a dialogue. Inheritance object Object ScriptableObject Dialogue Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.Dialogue.html\")] public class Dialogue : ScriptableObject Fields | Edit this page View Source AllNodes A list of all of the nodes that are in this dialogue. Declaration [HideInInspector] public List<Node> AllNodes Field Value Type Description List<Node> | Edit this page View Source Blackboard The Blackboard of this dialogue. Declaration [HideInInspector] public Blackboard Blackboard Field Value Type Description Blackboard | Edit this page View Source LastOrCurrentNode The current node reached while progressing in this dialogue. Or the last one reached before exiting the dialogue. Declaration [HideInInspector] public Node LastOrCurrentNode Field Value Type Description Node | Edit this page View Source RootNode The RootNode of this dialogue. Declaration [HideInInspector] public RootNode RootNode Field Value Type Description RootNode Properties | Edit this page View Source ClonedFrom The original dialogue which is used to create this cloned one. Returns null if this dialogue is not a clone. Declaration public Dialogue ClonedFrom { get; } Property Value Type Description Dialogue | Edit this page View Source IsClone Use to check if this dialogue is a clone. Declaration public bool IsClone { get; } Property Value Type Description bool | Edit this page View Source People People in this dialogue (might be overridden on clones). Declaration public List<Person> People { get; } Property Value Type Description List<Person> Methods | Edit this page View Source Clone() Use to clone the dialogue scriptable object. Useful to progress in a copy while keeping the original unchanged. Declaration public Dialogue Clone() Returns Type Description Dialogue | Edit this page View Source CreateNode(Type) Use to create new nodes. Using runtime is not recommended. Declaration public Node CreateNode(Type type) Parameters Type Name Description Type type Returns Type Description Node | Edit this page View Source DeleteNode(Node) Use to delete existing nodes. Using runtime is not recommended. Declaration public void DeleteNode(Node node) Parameters Type Name Description Node node | Edit this page View Source GetAllDialogueParts() Use to get a list of all DialoguePartNodes in this dialogue. Declaration public List<DialoguePartNode> GetAllDialogueParts() Returns Type Description List<DialoguePartNode> The entire list of DialoguePartNodes in the current dialogue. | Edit this page View Source GetDialoguePartNodesWithName(string) Use to find DialoguePartNodes with a specific name. Declaration public List<DialoguePartNode> GetDialoguePartNodesWithName(string targetName) Parameters Type Name Description string targetName Returns Type Description List<DialoguePartNode> A list of DialoguePartNodes with that specific name. Throws an exception nothing's found. | Edit this page View Source Initialize() It teleports the flow back to the root node. Declaration public void Initialize() | Edit this page View Source OverridePeople(List<Person>) Use to override the people in this dialogue. Keeping person count the same is highly recommended. The original scriptable object's people list won't be affected by this. CAUTION! The recommended way is to use this function on clones only. Declaration public void OverridePeople(List<Person> overridePeople) Parameters Type Name Description List<Person> overridePeople | Edit this page View Source Pass(params object[]) Use to progress to the next node in the dialogue. Using this method directly is not recommended if you're not adding an extra functionality. You can consider using DialoguePlayer instead. Declaration public void Pass(params object[] passData) Parameters Type Name Description object[] passData Events | Edit this page View Source OnValidateAction Action which will get invoked if OnValidate() gets called in the editor. Declaration public event Action OnValidateAction Event Type Type Description Action"
  },
  "api/com.absence.dialoguesystem.DialogueAnimationsPlayer.WorkMode.html": {
    "href": "api/com.absence.dialoguesystem.DialogueAnimationsPlayer.WorkMode.html",
    "title": "Enum DialogueAnimationsPlayer.WorkMode | absent-dialogues",
    "keywords": "Enum DialogueAnimationsPlayer.WorkMode Lets you select the way this extension uses the AnimatorMemberName. Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public enum DialogueAnimationsPlayer.WorkMode Fields Name Description CrossFade SetTrigger"
  },
  "api/com.absence.dialoguesystem.DialogueAnimationsPlayer.html": {
    "href": "api/com.absence.dialoguesystem.DialogueAnimationsPlayer.html",
    "title": "Class DialogueAnimationsPlayer | absent-dialogues",
    "keywords": "Class DialogueAnimationsPlayer A small component which is responsible for playing the animations (if there is any) of the dialogue instance attached to the same game object. Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase DialogueAnimationsPlayer Inherited Members DialogueExtensionBase.m_instance DialogueExtensionBase.Order DialogueExtensionBase.OnBeforeSpeech(ref Person, ref string, ref List<Option>) DialogueExtensionBase.OnAfterCloning() DialogueExtensionBase.OnDialogueUpdate() DialogueExtensionBase.FindInstance() Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [RequireComponent(typeof(DialogueInstance))] [AddComponentMenu(\"absencee_/absent-dialogues/Dialogue Instance Extensions/Dialogue Animations Player\")] [DisallowMultipleComponent] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueAnimationsPlayer.html\")] public class DialogueAnimationsPlayer : DialogueExtensionBase Methods | Edit this page View Source OnHandleAdditionalData(AdditionalSpeechData) Use to define what to do with the current AdditionalSpeechData. Gets called when the m_instance progresses. Declaration public override void OnHandleAdditionalData(AdditionalSpeechData data) Parameters Type Name Description AdditionalSpeechData data Overrides DialogueExtensionBase.OnHandleAdditionalData(AdditionalSpeechData)"
  },
  "api/com.absence.dialoguesystem.DialogueDisplayer.html": {
    "href": "api/com.absence.dialoguesystem.DialogueDisplayer.html",
    "title": "Class DialogueDisplayer | absent-dialogues",
    "keywords": "Class DialogueDisplayer A singleton with the duty of displaying the current dialogue context. Written for the Unity UI package. Not compatible with the UI Toolkit. Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<DialogueDisplayer> Singleton<DialogueDisplayer> DialogueDisplayer Inherited Members Singleton<DialogueDisplayer>.Awake() StaticInstance<DialogueDisplayer>.OnApplicationQuit() StaticInstance<DialogueDisplayer>.Instance Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [AddComponentMenu(\"absencee_/absent-dialogues/UI/Dialogue Displayer\")] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueDisplayer.html\")] public class DialogueDisplayer : Singleton<DialogueDisplayer> Methods | Edit this page View Source Display(Person, string) Displays a speech with no options. Declaration public void Display(Person speaker, string speech) Parameters Type Name Description Person speaker string speech | Edit this page View Source Display(Person, string, List<Option>, Action<int>) Displays a speech with options. Declaration public void Display(Person speaker, string speech, List<Option> options, Action<int> optionPressAction) Parameters Type Name Description Person speaker string speech List<Option> options Action<int> optionPressAction | Edit this page View Source Occupy() Let's you occupy the sinleton. If it is occuppied by any other scripts about dialogues, you can't occupy. Declaration public bool Occupy() Returns Type Description bool Returns false if the displayer is already occupied. Returns true otherwise. | Edit this page View Source Release() Removes the occupience of the displayer. CAUTION! DialogueDisplayer does not hold a reference to the current occupier. Because of that, be careful calling this function. Declaration public void Release()"
  },
  "api/com.absence.dialoguesystem.DialogueExtensionBase.html": {
    "href": "api/com.absence.dialoguesystem.DialogueExtensionBase.html",
    "title": "Class DialogueExtensionBase | absent-dialogues",
    "keywords": "Class DialogueExtensionBase This is the base class to derive from in order to handle some custom logic over the system. Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase DialogueAnimationsPlayer DialogueInputHandler_Legacy DialogueSoundsPlayer Demo_GUI Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [RequireComponent(typeof(DialogueInstance))] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueExtensionBase.html\")] public abstract class DialogueExtensionBase : MonoBehaviour Remarks Execution order goes like: OnHandleAdditionalData(...); OnBeforeSpeech(...); Fields | Edit this page View Source m_instance Declaration [SerializeField] [Readonly] [Tooltip(\"Dialogue instance component attached to the current gameobject.\")] protected DialogueInstance m_instance Field Value Type Description DialogueInstance Properties | Edit this page View Source Order Declaration public sbyte Order { get; } Property Value Type Description sbyte Methods | Edit this page View Source FindInstance() Declaration public void FindInstance() | Edit this page View Source OnAfterCloning() Use to define what to do right after the target instance clones it's ReferencedDialogue. Declaration public virtual void OnAfterCloning() | Edit this page View Source OnBeforeSpeech(ref Person, ref string, ref List<Option>) Use to define what to do with the original speech data right before displaying it. Declaration public virtual void OnBeforeSpeech(ref Person speaker, ref string speech, ref List<Option> options) Parameters Type Name Description Person speaker Speaker of this speech. string speech Speech in context. List<Option> options Option of this speech. | Edit this page View Source OnDialogueUpdate() Use to define what to do on each frame when the target instance is InDialogue Declaration public virtual void OnDialogueUpdate() | Edit this page View Source OnHandleAdditionalData(AdditionalSpeechData) Use to define what to do with the current AdditionalSpeechData. Gets called when the m_instance progresses. Declaration public virtual void OnHandleAdditionalData(AdditionalSpeechData data) Parameters Type Name Description AdditionalSpeechData data"
  },
  "api/com.absence.dialoguesystem.DialogueInputHandler_Legacy.html": {
    "href": "api/com.absence.dialoguesystem.DialogueInputHandler_Legacy.html",
    "title": "Class DialogueInputHandler_Legacy | absent-dialogues",
    "keywords": "Class DialogueInputHandler_Legacy A small component with the responsibility of using the input comes from player (uses legacy input system of unity) on the dialogue. Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase DialogueInputHandler_Legacy Inherited Members DialogueExtensionBase.m_instance DialogueExtensionBase.Order DialogueExtensionBase.OnHandleAdditionalData(AdditionalSpeechData) DialogueExtensionBase.OnBeforeSpeech(ref Person, ref string, ref List<Option>) DialogueExtensionBase.OnAfterCloning() DialogueExtensionBase.FindInstance() Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [RequireComponent(typeof(DialogueInstance))] [AddComponentMenu(\"absencee_/absent-dialogues/Dialogue Instance Extensions/Dialogue Input Handler (Legacy)\")] [DisallowMultipleComponent] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueInputHandler_Legacy.html\")] public class DialogueInputHandler_Legacy : DialogueExtensionBase Methods | Edit this page View Source OnDialogueUpdate() Use to define what to do on each frame when the target instance is InDialogue Declaration public override void OnDialogueUpdate() Overrides DialogueExtensionBase.OnDialogueUpdate()"
  },
  "api/com.absence.dialoguesystem.DialogueInstance.BeforeSpeechEventHandler.html": {
    "href": "api/com.absence.dialoguesystem.DialogueInstance.BeforeSpeechEventHandler.html",
    "title": "Delegate DialogueInstance.BeforeSpeechEventHandler | absent-dialogues",
    "keywords": "Delegate DialogueInstance.BeforeSpeechEventHandler Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public delegate void DialogueInstance.BeforeSpeechEventHandler(ref Person speaker, ref string speech, ref List<Option> options) Parameters Type Name Description Person speaker string speech List<Option> options"
  },
  "api/com.absence.dialoguesystem.DialogueInstance.SpeechEventHandler.html": {
    "href": "api/com.absence.dialoguesystem.DialogueInstance.SpeechEventHandler.html",
    "title": "Delegate DialogueInstance.SpeechEventHandler | absent-dialogues",
    "keywords": "Delegate DialogueInstance.SpeechEventHandler The delegate responsible for handling events directly about speech. Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public delegate void DialogueInstance.SpeechEventHandler(ref Person speaker, ref string speech, ref List<Option> options) Parameters Type Name Description Person speaker Speaker of this speech. string speech Speech in context. List<Option> options Options of this speech (null if there is no options)."
  },
  "api/com.absence.dialoguesystem.DialogueInstance.html": {
    "href": "api/com.absence.dialoguesystem.DialogueInstance.html",
    "title": "Class DialogueInstance | absent-dialogues",
    "keywords": "Class DialogueInstance Lets you manage a single DialoguePlayer in the scene easily. Inheritance object Object Component Behaviour MonoBehaviour DialogueInstance Implements IUseDialogueInScene Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [AddComponentMenu(\"absencee_/absent-dialogues/Dialogue Instance\")] [DisallowMultipleComponent] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueInstance.html\")] public class DialogueInstance : MonoBehaviour, IUseDialogueInScene Properties | Edit this page View Source ClonedDialogue The dialogue cloned and in-use. Declaration public Dialogue ClonedDialogue { get; } Property Value Type Description Dialogue | Edit this page View Source InDialogue Use to check if this instance is in progress right now. Declaration public bool InDialogue { get; } Property Value Type Description bool | Edit this page View Source Player DialoguePlayer of this instance. Declaration public DialoguePlayer Player { get; } Property Value Type Description DialoguePlayer | Edit this page View Source ReferencedDialogue The original dialogue provided for the script (not the cloned one). Declaration public Dialogue ReferencedDialogue { get; } Property Value Type Description Dialogue Methods | Edit this page View Source AddExtension<T>() Adds a DialogueExtensionBase to the target dialogue instance. Does not work runtime. Declaration public void AddExtension<T>() where T : DialogueExtensionBase Type Parameters Name Description T | Edit this page View Source EnterDialogue() Use to enter dialogue. Declaration public bool EnterDialogue() Returns Type Description bool False if the DialogueDisplayer is already occupied by any other script. Returns true otherwise. | Edit this page View Source ExitDialogue() Use to exit current dialogue. Declaration public void ExitDialogue() Events | Edit this page View Source OnAfterCloning Action which will get invoked right after this instance clons it's ReferencedDialogue. Declaration public event Action OnAfterCloning Event Type Type Description Action | Edit this page View Source OnBeforeSpeech Subscribe to this delegate to override any data will get displayed. Declaration public event DialogueInstance.SpeechEventHandler OnBeforeSpeech Event Type Type Description DialogueInstance.SpeechEventHandler | Edit this page View Source OnHandleAdditionalData The Action which will get invoked when HandleAdditionalData() gets called. Declaration public event Action<AdditionalSpeechData> OnHandleAdditionalData Event Type Type Description Action<AdditionalSpeechData> Implements IUseDialogueInScene"
  },
  "api/com.absence.dialoguesystem.DialogueOptionText.html": {
    "href": "api/com.absence.dialoguesystem.DialogueOptionText.html",
    "title": "Class DialogueOptionText | absent-dialogues",
    "keywords": "Class DialogueOptionText A small component that manages the functionality of an option's drawing and input. Inheritance object Object Component Behaviour MonoBehaviour DialogueOptionText Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [AddComponentMenu(\"absencee_/absent-dialogues/UI/Option Text\")] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueOptionText.html\")] public class DialogueOptionText : MonoBehaviour Methods | Edit this page View Source Initialize(int, string) Sets the index and the text of this option. Declaration public void Initialize(int optionIndex, string text) Parameters Type Name Description int optionIndex string text | Edit this page View Source OnClick() Calls OnClickAction. Declaration public void OnClick() Events | Edit this page View Source OnClickAction Declaration public event Action<int> OnClickAction Event Type Type Description Action<int>"
  },
  "api/com.absence.dialoguesystem.DialoguePlayer.DialoguePlayerState.html": {
    "href": "api/com.absence.dialoguesystem.DialoguePlayer.DialoguePlayerState.html",
    "title": "Enum DialoguePlayer.DialoguePlayerState | absent-dialogues",
    "keywords": "Enum DialoguePlayer.DialoguePlayerState Shows what state the dialogue is in. Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public enum DialoguePlayer.DialoguePlayerState Fields Name Description Idle WaitingForOption WaitingForSkip WillExit"
  },
  "api/com.absence.dialoguesystem.DialoguePlayer.PlayerState.html": {
    "href": "api/com.absence.dialoguesystem.DialoguePlayer.PlayerState.html",
    "title": "Enum DialoguePlayer.PlayerState | absent-dialogues",
    "keywords": "Enum DialoguePlayer.PlayerState Shows what state the dialogue player is in. Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public enum DialoguePlayer.PlayerState Fields Name Description NoSpeech The player is not displaying any dialogue or the current node is not IContainSpeech. WaitingForOption The player is displaying a speech which has some options and waiting for player to pick an option. WaitingForSkip The player is displaying a speech without any options and waiting for the player to skip it. WillExit The player's last node was a ExitDialogAfterwards."
  },
  "api/com.absence.dialoguesystem.DialoguePlayer.html": {
    "href": "api/com.absence.dialoguesystem.DialoguePlayer.html",
    "title": "Class DialoguePlayer | absent-dialogues",
    "keywords": "Class DialoguePlayer Lets you progress in a dialogue easily. Inheritance object DialoguePlayer Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialoguePlayer.html\")] public class DialoguePlayer Constructors | Edit this page View Source DialoguePlayer(Dialogue) Use to create a new DialoguePlayer. Declaration public DialoguePlayer(Dialogue dialogue) Parameters Type Name Description Dialogue dialogue The original dialogue to clone from. | Edit this page View Source DialoguePlayer(Dialogue, List<Person>) Use to create a new DialoguePlayer with an overridden people list. Declaration public DialoguePlayer(Dialogue dialogue, List<Person> overridePeople) Parameters Type Name Description Dialogue dialogue The original dialogue to clone from. List<Person> overridePeople The list of new people. Properties | Edit this page View Source AdditionalSpeechData Additional data of the current node. Declaration public AdditionalSpeechData AdditionalSpeechData { get; } Property Value Type Description AdditionalSpeechData | Edit this page View Source ClonedDialogue The dialogue cloned from the original one from constructor. Declaration public Dialogue ClonedDialogue { get; } Property Value Type Description Dialogue | Edit this page View Source HasOptions Use to check if current node is a FastSpeechNode or not. Declaration public bool HasOptions { get; } Property Value Type Description bool | Edit this page View Source HasPerson Use to check if current node PersonDependent or not. Declaration public bool HasPerson { get; } Property Value Type Description bool | Edit this page View Source HasSpeech Use to check if current node is a IContainSpeech or not. Declaration public bool HasSpeech { get; } Property Value Type Description bool | Edit this page View Source Options Options of the current node, if there is any. Declaration public List<Option> Options { get; } Property Value Type Description List<Option> | Edit this page View Source Speaker Person who speaks. Declaration public Person Speaker { get; } Property Value Type Description Person | Edit this page View Source Speech Speech of the current node. Declaration public string Speech { get; } Property Value Type Description string | Edit this page View Source State Current state of the player. Declaration public DialoguePlayer.PlayerState State { get; } Property Value Type Description DialoguePlayer.PlayerState Methods | Edit this page View Source Continue(params object[]) Use to progress in the target dialogue wih some optional data. Declaration public void Continue(params object[] passData) Parameters Type Name Description object[] passData Anything that you want to pass as data. (e.g. DecisionSpeechNode uses the [0] element to get the selected option index.) | Edit this page View Source TeleportToRoot() Teleports the flow to the RootNode of the dialogue clone. Declaration public void TeleportToRoot() Events | Edit this page View Source OnContinue Action which will get invoked when Continue(params object[]) gets called. Declaration public event Action<DialoguePlayer.PlayerState> OnContinue Event Type Type Description Action<DialoguePlayer.PlayerState>"
  },
  "api/com.absence.dialoguesystem.DialogueSoundsPlayer.html": {
    "href": "api/com.absence.dialoguesystem.DialogueSoundsPlayer.html",
    "title": "Class DialogueSoundsPlayer | absent-dialogues",
    "keywords": "Class DialogueSoundsPlayer A small component which is responsible for playing the sounds (if there is any) of the DialogueInstance attached to the same gameobject. Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase DialogueSoundsPlayer Inherited Members DialogueExtensionBase.m_instance DialogueExtensionBase.Order DialogueExtensionBase.OnBeforeSpeech(ref Person, ref string, ref List<Option>) DialogueExtensionBase.OnAfterCloning() DialogueExtensionBase.OnDialogueUpdate() DialogueExtensionBase.FindInstance() Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [RequireComponent(typeof(DialogueInstance))] [AddComponentMenu(\"absencee_/absent-dialogues/Dialogue Instance Extensions/Dialogue Sounds Player\")] [DisallowMultipleComponent] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueSoundsPlayer.html\")] public class DialogueSoundsPlayer : DialogueExtensionBase Methods | Edit this page View Source OnHandleAdditionalData(AdditionalSpeechData) Use to define what to do with the current AdditionalSpeechData. Gets called when the m_instance progresses. Declaration public override void OnHandleAdditionalData(AdditionalSpeechData data) Parameters Type Name Description AdditionalSpeechData data Overrides DialogueExtensionBase.OnHandleAdditionalData(AdditionalSpeechData)"
  },
  "api/com.absence.dialoguesystem.IExternalDialogueElement.html": {
    "href": "api/com.absence.dialoguesystem.IExternalDialogueElement.html",
    "title": "Interface IExternalDialogueElement | absent-dialogues",
    "keywords": "Interface IExternalDialogueElement Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public interface IExternalDialogueElement Methods | Edit this page View Source Initialize(Dialogue) Declaration void Initialize(Dialogue dialogue) Parameters Type Name Description Dialogue dialogue"
  },
  "api/com.absence.dialoguesystem.IUseDialogueInScene.html": {
    "href": "api/com.absence.dialoguesystem.IUseDialogueInScene.html",
    "title": "Interface IUseDialogueInScene | absent-dialogues",
    "keywords": "Interface IUseDialogueInScene Any game object with a script that implements this interface attached will display it's dialogue when gets selected. Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public interface IUseDialogueInScene Properties | Edit this page View Source ClonedDialogue The dialogue cloned and in-use. Declaration Dialogue ClonedDialogue { get; } Property Value Type Description Dialogue | Edit this page View Source ReferencedDialogue The original dialogue provided for the script (not the cloned one). Declaration Dialogue ReferencedDialogue { get; } Property Value Type Description Dialogue"
  },
  "api/com.absence.dialoguesystem.OptionText.html": {
    "href": "api/com.absence.dialoguesystem.OptionText.html",
    "title": "Class OptionText | absent-dialogues",
    "keywords": "Class OptionText A small component that manages the functionality of an option's drawing and input. Inheritance object Object Component Behaviour MonoBehaviour OptionText Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [AddComponentMenu(\"absencee_/absent-dialogues/Option Text\")] public class OptionText : MonoBehaviour Fields | Edit this page View Source OnClickAction Declaration public Action<int> OnClickAction Field Value Type Description Action<int> Methods | Edit this page View Source Initialize(int, string) Declaration public void Initialize(int optionIndex, string text) Parameters Type Name Description int optionIndex string text | Edit this page View Source OnClick() Declaration public void OnClick()"
  },
  "api/com.absence.dialoguesystem.editor.BlackboardView.UxmlFactory.html": {
    "href": "api/com.absence.dialoguesystem.editor.BlackboardView.UxmlFactory.html",
    "title": "Class BlackboardView.UxmlFactory | absent-dialogues",
    "keywords": "Class BlackboardView.UxmlFactory Inheritance object BaseUxmlFactory<BlackboardView, VisualElement.UxmlTraits> UxmlFactory<BlackboardView, VisualElement.UxmlTraits> BlackboardView.UxmlFactory Implements IUxmlFactory IBaseUxmlFactory Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class BlackboardView.UxmlFactory : UxmlFactory<BlackboardView, VisualElement.UxmlTraits>, IUxmlFactory, IBaseUxmlFactory Implements UnityEngine.UIElements.IUxmlFactory UnityEngine.UIElements.IBaseUxmlFactory"
  },
  "api/com.absence.dialoguesystem.editor.BlackboardView.html": {
    "href": "api/com.absence.dialoguesystem.editor.BlackboardView.html",
    "title": "Class BlackboardView | absent-dialogues",
    "keywords": "Class BlackboardView A visual element subtype which is responsible for displaying a Blackboard. Inheritance object CallbackEventHandler Focusable VisualElement BlackboardView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.editor.BlackboardView.html\")] public class BlackboardView : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Edit this page View Source BlackboardView() Declaration public BlackboardView() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/com.absence.dialoguesystem.editor.DialogueCreationHandler.html": {
    "href": "api/com.absence.dialoguesystem.editor.DialogueCreationHandler.html",
    "title": "Class DialogueCreationHandler | absent-dialogues",
    "keywords": "Class DialogueCreationHandler A script responsible for handling the creation of a dialogue. Inheritance object DialogueCreationHandler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.editor.DialogueCreationHandler.html\")] public static class DialogueCreationHandler"
  },
  "api/com.absence.dialoguesystem.editor.DialogueCustomEditor.html": {
    "href": "api/com.absence.dialoguesystem.editor.DialogueCustomEditor.html",
    "title": "Class DialogueCustomEditor | absent-dialogues",
    "keywords": "Class DialogueCustomEditor Custom editor script for dialogues. Inheritance object Object ScriptableObject Editor DialogueCustomEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [CustomEditor(typeof(Dialogue), false)] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.editor.DialogueCustomEditor.html\")] public sealed class DialogueCustomEditor : Editor Methods | Edit this page View Source OnInspectorGUI() Implement this function to make a custom inspector. Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/com.absence.dialoguesystem.editor.DialogueEditorWindow.html": {
    "href": "api/com.absence.dialoguesystem.editor.DialogueEditorWindow.html",
    "title": "Class DialogueEditorWindow | absent-dialogues",
    "keywords": "Class DialogueEditorWindow The dialogue editor window responsible for letting you open, edit and save a dialogue. Inheritance object Object ScriptableObject EditorWindow DialogueEditorWindow Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.editor.DialogueEditorWindow.html\")] public sealed class DialogueEditorWindow : EditorWindow Methods | Edit this page View Source CreateGUI() Declaration public void CreateGUI() | Edit this page View Source FrameToNode(Node) Teleports the view to the target node and selects it. Declaration public static void FrameToNode(Node node) Parameters Type Name Description Node node Target node. | Edit this page View Source LoadLastDialogue() Use to load the last dialogue displayed in the editor. Declaration public static void LoadLastDialogue() | Edit this page View Source OnOpenAsset(int, int) The method that handles the asset selection events. Declaration [OnOpenAsset] public static bool OnOpenAsset(int instanceId, int line) Parameters Type Name Description int instanceId int line Returns Type Description bool | Edit this page View Source OpenWindow() Use to open the dialogue editor window. Declaration [MenuItem(\"absencee_/absent-dialogues/Open Dialogue Graph Window\")] public static void OpenWindow() | Edit this page View Source PopulateDialogueView(Dialogue) Use to display a dialogue in the graph. Declaration public static bool PopulateDialogueView(Dialogue dialogue) Parameters Type Name Description Dialogue dialogue Target dialogue. Returns Type Description bool | Edit this page View Source SaveLastDialogue() Use to save the dialogue displayed currently in the editor. Declaration public static void SaveLastDialogue() | Edit this page View Source SelectNode(Node) Selects the target node. Declaration public static void SelectNode(Node node) Parameters Type Name Description Node node Target node. Events | Edit this page View Source OnGUIDelayCall Gets invoked when CreateGUI() gets called. Clears itself everytime it gets invoked. Declaration public static event Action OnGUIDelayCall Event Type Type Description Action"
  },
  "api/com.absence.dialoguesystem.editor.DialogueGraphView.UxmlFactory.html": {
    "href": "api/com.absence.dialoguesystem.editor.DialogueGraphView.UxmlFactory.html",
    "title": "Class DialogueGraphView.UxmlFactory | absent-dialogues",
    "keywords": "Class DialogueGraphView.UxmlFactory Inheritance object BaseUxmlFactory<DialogueGraphView, VisualElement.UxmlTraits> UxmlFactory<DialogueGraphView, VisualElement.UxmlTraits> DialogueGraphView.UxmlFactory Implements IUxmlFactory IBaseUxmlFactory Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class DialogueGraphView.UxmlFactory : UxmlFactory<DialogueGraphView, VisualElement.UxmlTraits>, IUxmlFactory, IBaseUxmlFactory Implements UnityEngine.UIElements.IUxmlFactory UnityEngine.UIElements.IBaseUxmlFactory"
  },
  "api/com.absence.dialoguesystem.editor.DialogueGraphView.html": {
    "href": "api/com.absence.dialoguesystem.editor.DialogueGraphView.html",
    "title": "Class DialogueGraphView | absent-dialogues",
    "keywords": "Class DialogueGraphView The graph view responsible for rendering a dialogue's graph elements. Inheritance object CallbackEventHandler Focusable VisualElement GraphView DialogueGraphView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.editor.DialogueGraphView.html\")] public sealed class DialogueGraphView : GraphView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Edit this page View Source DialogueGraphView() Default constructor. Declaration public DialogueGraphView() Methods | Edit this page View Source BuildContextualMenu(ContextualMenuPopulateEvent) Add menu items to the contextual menu. Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt The event holding the menu to populate. Overrides UnityEditor.Experimental.GraphView.GraphView.BuildContextualMenu(UnityEngine.UIElements.ContextualMenuPopulateEvent) | Edit this page View Source FindNodeView(Node) Use to find the view of a node. Declaration public NodeView FindNodeView(Node node) Parameters Type Name Description Node node Target node. Returns Type Description NodeView Returns the view of the target node. | Edit this page View Source GetCompatiblePorts(Port, NodeAdapter) Get all ports compatible with given port. Declaration public override List<Port> GetCompatiblePorts(Port startPort, NodeAdapter nodeAdapter) Parameters Type Name Description Port startPort Start port to validate against. NodeAdapter nodeAdapter Node adapter. Returns Type Description List<Port> List of compatible ports. Overrides UnityEditor.Experimental.GraphView.GraphView.GetCompatiblePorts(UnityEditor.Experimental.GraphView.Port, UnityEditor.Experimental.GraphView.NodeAdapter) | Edit this page View Source Refresh() Use to refresh the current graph view. Declaration public void Refresh() Events | Edit this page View Source OnBeforeNodeDeleted Declaration public event Action<Node> OnBeforeNodeDeleted Event Type Type Description Action<Node> | Edit this page View Source OnNodeCreated Declaration public event Action<Node> OnNodeCreated Event Type Type Description Action<Node> | Edit this page View Source OnNodeSelected Gets invoked when a node gets selected. Declaration public event Action<NodeView> OnNodeSelected Event Type Type Description Action<NodeView> | Edit this page View Source OnPopulateView Gets invoked when a dialogue gets displayed. Declaration public event Action OnPopulateView Event Type Type Description Action Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/com.absence.dialoguesystem.editor.InspectorView.UxmlFactory.html": {
    "href": "api/com.absence.dialoguesystem.editor.InspectorView.UxmlFactory.html",
    "title": "Class InspectorView.UxmlFactory | absent-dialogues",
    "keywords": "Class InspectorView.UxmlFactory Inheritance object BaseUxmlFactory<InspectorView, VisualElement.UxmlTraits> UxmlFactory<InspectorView, VisualElement.UxmlTraits> InspectorView.UxmlFactory Implements IUxmlFactory IBaseUxmlFactory Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class InspectorView.UxmlFactory : UxmlFactory<InspectorView, VisualElement.UxmlTraits>, IUxmlFactory, IBaseUxmlFactory Implements UnityEngine.UIElements.IUxmlFactory UnityEngine.UIElements.IBaseUxmlFactory"
  },
  "api/com.absence.dialoguesystem.editor.InspectorView.html": {
    "href": "api/com.absence.dialoguesystem.editor.InspectorView.html",
    "title": "Class InspectorView | absent-dialogues",
    "keywords": "Class InspectorView A visual element subtype which is responsible for rendering a node's inspector properties when selected. Inheritance object CallbackEventHandler Focusable VisualElement InspectorView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.editor.InspectorView.html\")] public class InspectorView : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Edit this page View Source InspectorView() Default constructor. Declaration public InspectorView() Events | Edit this page View Source OnNodeValidation Declaration public event Action OnNodeValidation Event Type Type Description Action Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/com.absence.dialoguesystem.editor.NodeCustomEditor.html": {
    "href": "api/com.absence.dialoguesystem.editor.NodeCustomEditor.html",
    "title": "Class NodeCustomEditor | absent-dialogues",
    "keywords": "Class NodeCustomEditor Inheritance object Object ScriptableObject Editor NodeCustomEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [CustomEditor(typeof(Node), true)] public sealed class NodeCustomEditor : Editor Methods | Edit this page View Source OnInspectorGUI() Implement this function to make a custom inspector. Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/com.absence.dialoguesystem.editor.NodeView.html": {
    "href": "api/com.absence.dialoguesystem.editor.NodeView.html",
    "title": "Class NodeView | absent-dialogues",
    "keywords": "Class NodeView The view class responsible for rendering a node's data in the graph. Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node NodeView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.editor.NodeView.html\")] public class NodeView : Node, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Edit this page View Source NodeView(Node) Use to construct a node view from a node. Declaration public NodeView(Node node) Parameters Type Name Description Node node Target node. Fields | Edit this page View Source Input The left-hand side port. Declaration public Port Input Field Value Type Description Port | Edit this page View Source K_PERSONDEPENDENT_CLASSNAME The USS class name for person dependent nodes. Declaration public static string K_PERSONDEPENDENT_CLASSNAME Field Value Type Description string | Edit this page View Source Node The node this view displays. Declaration public Node Node Field Value Type Description Node | Edit this page View Source OnNodeSelected Action gets invoked when this node gets selected or unselected. Declaration public Action<NodeView> OnNodeSelected Field Value Type Description Action<NodeView> | Edit this page View Source Outputs A list of right-hand side ports. Declaration public List<Port> Outputs Field Value Type Description List<Port> Properties | Edit this page View Source Master The graph we're in. Declaration public DialogueGraphView Master { get; } Property Value Type Description DialogueGraphView Methods | Edit this page View Source OnSelected() Called when the GraphElement is selected. Declaration public override void OnSelected() Overrides UnityEditor.Experimental.GraphView.GraphElement.OnSelected() | Edit this page View Source OnUnselected() Called when the GraphElement is unselected. Declaration public override void OnUnselected() Overrides UnityEditor.Experimental.GraphView.GraphElement.OnUnselected() | Edit this page View Source SetPosition(Rect) Set node position. Declaration public override void SetPosition(Rect newPos) Parameters Type Name Description Rect newPos New position. Overrides UnityEditor.Experimental.GraphView.Node.SetPosition(UnityEngine.Rect) Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/com.absence.dialoguesystem.editor.RuntimeSelectionHandler.html": {
    "href": "api/com.absence.dialoguesystem.editor.RuntimeSelectionHandler.html",
    "title": "Class RuntimeSelectionHandler | absent-dialogues",
    "keywords": "Class RuntimeSelectionHandler It handles the selection events of IUseDialogueInScene game objects. Inheritance object RuntimeSelectionHandler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [InitializeOnLoad] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.editor.RuntimeSelectionHandler.html\")] public static class RuntimeSelectionHandler"
  },
  "api/com.absence.dialoguesystem.editor.SplitView.UxmlFactory.html": {
    "href": "api/com.absence.dialoguesystem.editor.SplitView.UxmlFactory.html",
    "title": "Class SplitView.UxmlFactory | absent-dialogues",
    "keywords": "Class SplitView.UxmlFactory Inheritance object BaseUxmlFactory<SplitView, TwoPaneSplitView.UxmlTraits> UxmlFactory<SplitView, TwoPaneSplitView.UxmlTraits> SplitView.UxmlFactory Implements IUxmlFactory IBaseUxmlFactory Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class SplitView.UxmlFactory : UxmlFactory<SplitView, TwoPaneSplitView.UxmlTraits>, IUxmlFactory, IBaseUxmlFactory Implements UnityEngine.UIElements.IUxmlFactory UnityEngine.UIElements.IBaseUxmlFactory"
  },
  "api/com.absence.dialoguesystem.editor.SplitView.html": {
    "href": "api/com.absence.dialoguesystem.editor.SplitView.html",
    "title": "Class SplitView | absent-dialogues",
    "keywords": "Class SplitView Inheritance object CallbackEventHandler Focusable VisualElement TwoPaneSplitView SplitView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members TwoPaneSplitView.CollapseChild(int) TwoPaneSplitView.UnCollapse() TwoPaneSplitView.fixedPane TwoPaneSplitView.flexedPane TwoPaneSplitView.fixedPaneIndex TwoPaneSplitView.fixedPaneInitialDimension TwoPaneSplitView.orientation TwoPaneSplitView.contentContainer Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class SplitView : TwoPaneSplitView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/com.absence.dialoguesystem.editor.VariableBankCreationHandler.html": {
    "href": "api/com.absence.dialoguesystem.editor.VariableBankCreationHandler.html",
    "title": "Class VariableBankCreationHandler | absent-dialogues",
    "keywords": "Class VariableBankCreationHandler Inheritance object VariableBankCreationHandler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class VariableBankCreationHandler"
  },
  "api/com.absence.dialoguesystem.editor.html": {
    "href": "api/com.absence.dialoguesystem.editor.html",
    "title": "Namespace com.absence.dialoguesystem.editor | absent-dialogues",
    "keywords": "Namespace com.absence.dialoguesystem.editor Classes BlackboardView A visual element subtype which is responsible for displaying a Blackboard. BlackboardView.UxmlFactory DialogueCreationHandler A script responsible for handling the creation of a dialogue. DialogueEditorWindow The dialogue editor window responsible for letting you open, edit and save a dialogue. DialogueGraphView The graph view responsible for rendering a dialogue's graph elements. DialogueGraphView.UxmlFactory InspectorView A visual element subtype which is responsible for rendering a node's inspector properties when selected. InspectorView.UxmlFactory NodeView The view class responsible for rendering a node's data in the graph. RuntimeSelectionHandler It handles the selection events of IUseDialogueInScene game objects. SplitView SplitView.UxmlFactory"
  },
  "api/com.absence.dialoguesystem.examples.Demo_GUI.html": {
    "href": "api/com.absence.dialoguesystem.examples.Demo_GUI.html",
    "title": "Class Demo_GUI | absent-dialogues",
    "keywords": "Class Demo_GUI Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase Demo_GUI Inherited Members DialogueExtensionBase.m_instance DialogueExtensionBase.Order DialogueExtensionBase.OnHandleAdditionalData(AdditionalSpeechData) DialogueExtensionBase.OnBeforeSpeech(ref Person, ref string, ref List<Option>) DialogueExtensionBase.OnDialogueUpdate() DialogueExtensionBase.FindInstance() Namespace: com.absence.dialoguesystem.examples Assembly: Assembly-CSharp-firstpass.dll Syntax [RequireComponent(typeof(DialogueInstance))] public class Demo_GUI : DialogueExtensionBase Methods | Edit this page View Source OnAfterCloning() Use to define what to do right after the target instance clones it's ReferencedDialogue. Declaration public override void OnAfterCloning() Overrides DialogueExtensionBase.OnAfterCloning()"
  },
  "api/com.absence.dialoguesystem.examples.html": {
    "href": "api/com.absence.dialoguesystem.examples.html",
    "title": "Namespace com.absence.dialoguesystem.examples | absent-dialogues",
    "keywords": "Namespace com.absence.dialoguesystem.examples Classes Demo_GUI"
  },
  "api/com.absence.dialoguesystem.html": {
    "href": "api/com.absence.dialoguesystem.html",
    "title": "Namespace com.absence.dialoguesystem | absent-dialogues",
    "keywords": "Namespace com.absence.dialoguesystem Classes Dialogue The scriptable object derived type that holds all of the data which is essential for a dialogue. DialogueAnimationsPlayer A small component which is responsible for playing the animations (if there is any) of the dialogue instance attached to the same game object. DialogueDisplayer A singleton with the duty of displaying the current dialogue context. Written for the Unity UI package. Not compatible with the UI Toolkit. DialogueExtensionBase This is the base class to derive from in order to handle some custom logic over the system. DialogueInputHandler_Legacy A small component with the responsibility of using the input comes from player (uses legacy input system of unity) on the dialogue. DialogueInstance Lets you manage a single DialoguePlayer in the scene easily. DialogueOptionText A small component that manages the functionality of an option's drawing and input. DialoguePlayer Lets you progress in a dialogue easily. DialogueSoundsPlayer A small component which is responsible for playing the sounds (if there is any) of the DialogueInstance attached to the same gameobject. Interfaces IUseDialogueInScene Any game object with a script that implements this interface attached will display it's dialogue when gets selected. Enums DialoguePlayer.PlayerState Shows what state the dialogue player is in. Delegates DialogueInstance.SpeechEventHandler The delegate responsible for handling events directly about speech."
  },
  "api/com.absence.dialoguesystem.internals.ActionNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.ActionNode.html",
    "title": "Class ActionNode | absent-dialogues",
    "keywords": "Class ActionNode Node which invokes some actions on the flow. Inheritance object Object ScriptableObject Node ActionNode Implements IContainVariableManipulators Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.GetOutputPortNamesForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.ActionNode.html\")] public class ActionNode : Node, IContainVariableManipulators Remarks Execution order goes like: VBActions.ForEach(action => action.Perform()); UnityEvents?.Invoke(); CustomAction(); Fields | Edit this page View Source Next Declaration [HideInInspector] public Node Next Field Value Type Description Node | Edit this page View Source UnityEvents Declaration [Tooltip(\"All of the unity based events of this action node.\")] public UnityEvent UnityEvents Field Value Type Description UnityEvent | Edit this page View Source VBActions Declaration [Tooltip(\"All of the 'VariableBank' based actions of this action node.\")] public List<NodeVariableSetter> VBActions Field Value Type Description List<NodeVariableSetter> Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source CustomAction() Use to define what to do when this action node gets passed on the flow. Declaration protected virtual void CustomAction() | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetComparers() A list of comparers which you want to restrict in terms of VariableBank selection Declaration public List<NodeVariableComparer> GetComparers() Returns Type Description List<NodeVariableComparer> | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetSetters() A list of comparers which you want to restrict in terms of VariableBank selection Declaration public List<NodeVariableSetter> GetSetters() Returns Type Description List<NodeVariableSetter> | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source OnValidate() Declaration protected override void OnValidate() Overrides Node.OnValidate() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>) Implements IContainVariableManipulators"
  },
  "api/com.absence.dialoguesystem.internals.AdditionalSpeechData.html": {
    "href": "api/com.absence.dialoguesystem.internals.AdditionalSpeechData.html",
    "title": "Class AdditionalSpeechData | absent-dialogues",
    "keywords": "Class AdditionalSpeechData Holds some extra data which you can use on the flow. Inheritance object AdditionalSpeechData Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.AdditionalSpeechData.html\")] public class AdditionalSpeechData Properties | Edit this page View Source AnimatorMemberName Declaration public string AnimatorMemberName { get; } Property Value Type Description string | Edit this page View Source AudioClip Declaration public AudioClip AudioClip { get; } Property Value Type Description AudioClip | Edit this page View Source CustomInfo Declaration public string[] CustomInfo { get; } Property Value Type Description string[] | Edit this page View Source Sprite Declaration public Sprite Sprite { get; } Property Value Type Description Sprite"
  },
  "api/com.absence.dialoguesystem.internals.Blackboard.html": {
    "href": "api/com.absence.dialoguesystem.internals.Blackboard.html",
    "title": "Class Blackboard | absent-dialogues",
    "keywords": "Class Blackboard This is a class for holding any variables in the dialogues. It also contains a com.absence.variablesystem.VariableBank. Inheritance object Blackboard Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.Blackboard.html\")] public class Blackboard Fields | Edit this page View Source Bank Bank of this blackboard. Declaration [HideInInspector] public VariableBank Bank Field Value Type Description VariableBank Methods | Edit this page View Source Clone() Use to clone this blackboard. Declaration public Blackboard Clone() Returns Type Description Blackboard"
  },
  "api/com.absence.dialoguesystem.internals.ConditionNode.ProcessType.html": {
    "href": "api/com.absence.dialoguesystem.internals.ConditionNode.ProcessType.html",
    "title": "Enum ConditionNode.ProcessType | absent-dialogues",
    "keywords": "Enum ConditionNode.ProcessType Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public enum ConditionNode.ProcessType Fields Name Description All Any"
  },
  "api/com.absence.dialoguesystem.internals.ConditionNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.ConditionNode.html",
    "title": "Class ConditionNode | absent-dialogues",
    "keywords": "Class ConditionNode Node which re-routes the flow under some conditions. Inheritance object Object ScriptableObject Node ConditionNode Implements IContainVariableManipulators Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.ConditionNode.html\")] public class ConditionNode : Node, IContainVariableManipulators Fields | Edit this page View Source Comparers Declaration [Tooltip(\"All of the comparers this node relies on.\")] public List<NodeVariableComparer> Comparers Field Value Type Description List<NodeVariableComparer> | Edit this page View Source FalseNext Declaration [HideInInspector] public Node FalseNext Field Value Type Description Node | Edit this page View Source Processor Declaration [Tooltip(\"Use to declare what to do with the sum of the results of comparers.\")] public VBProcessType Processor Field Value Type Description VBProcessType | Edit this page View Source TrueNext Declaration [HideInInspector] public Node TrueNext Field Value Type Description Node Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetComparers() A list of comparers which you want to restrict in terms of VariableBank selection Declaration public List<NodeVariableComparer> GetComparers() Returns Type Description List<NodeVariableComparer> | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetSetters() A list of comparers which you want to restrict in terms of VariableBank selection Declaration public List<NodeVariableSetter> GetSetters() Returns Type Description List<NodeVariableSetter> | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source OnValidate() Declaration protected override void OnValidate() Overrides Node.OnValidate() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Process() Use this to override (if you need) the checking result of this node. Declaration protected virtual bool Process() Returns Type Description bool Normally returns the sum of the results of node's comparer list in a way declared by Processor | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>) Implements IContainVariableManipulators"
  },
  "api/com.absence.dialoguesystem.internals.DecisionSpeechNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.DecisionSpeechNode.html",
    "title": "Class DecisionSpeechNode | absent-dialogues",
    "keywords": "Class DecisionSpeechNode Node which displays a speech with options. Inheritance object Object ScriptableObject Node DecisionSpeechNode Implements IContainSpeech IContainVariableManipulators Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.DecisionSpeechNode.html\")] public sealed class DecisionSpeechNode : Node, IContainSpeech, IContainVariableManipulators Fields | Edit this page View Source Options Declaration [Space(10)] [Tooltip(\"All of the options of this node.\")] public List<Option> Options Field Value Type Description List<Option> | Edit this page View Source Speech Declaration [HideInInspector] public string Speech Field Value Type Description string Properties | Edit this page View Source PersonDependent Is this node person dependent. Declaration public override bool PersonDependent { get; } Property Value Type Description bool Overrides Node.PersonDependent Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetAdditionalSpeechData() Declaration public AdditionalSpeechData GetAdditionalSpeechData() Returns Type Description AdditionalSpeechData | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetComparers() A list of comparers which you want to restrict in terms of VariableBank selection Declaration public List<NodeVariableComparer> GetComparers() Returns Type Description List<NodeVariableComparer> | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOptions() Declaration public List<Option> GetOptions() Returns Type Description List<Option> | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetSetters() A list of comparers which you want to restrict in terms of VariableBank selection Declaration public List<NodeVariableSetter> GetSetters() Returns Type Description List<NodeVariableSetter> | Edit this page View Source GetSpeech() Declaration public string GetSpeech() Returns Type Description string | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source OnValidate() Declaration protected override void OnValidate() Overrides Node.OnValidate() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>) Implements IContainSpeech IContainVariableManipulators"
  },
  "api/com.absence.dialoguesystem.internals.DialoguePartNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.DialoguePartNode.html",
    "title": "Class DialoguePartNode | absent-dialogues",
    "keywords": "Class DialoguePartNode Node which let's you create more and seperate routes. Inheritance object Object ScriptableObject Node DialoguePartNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetOutputPortNamesForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.DialoguePartNode.html\")] public sealed class DialoguePartNode : Node Fields | Edit this page View Source DialoguePartName Declaration public string DialoguePartName Field Value Type Description string | Edit this page View Source Next Declaration [HideInInspector] public Node Next Field Value Type Description Node Properties | Edit this page View Source DisplayState Will this node display it's state in editor on the flow. Declaration public override bool DisplayState { get; } Property Value Type Description bool Overrides Node.DisplayState Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public override string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. Overrides Node.GetInputPortNameForCreation() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>)"
  },
  "api/com.absence.dialoguesystem.internals.FastSpeechNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.FastSpeechNode.html",
    "title": "Class FastSpeechNode | absent-dialogues",
    "keywords": "Class FastSpeechNode Node which displays a speech without options. Inheritance object Object ScriptableObject Node FastSpeechNode Implements IContainSpeech Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.GetOutputPortNamesForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.FastSpeechNode.html\")] public sealed class FastSpeechNode : Node, IContainSpeech Fields | Edit this page View Source Next Declaration [HideInInspector] public Node Next Field Value Type Description Node | Edit this page View Source Speech Declaration [HideInInspector] public string Speech Field Value Type Description string Properties | Edit this page View Source PersonDependent Is this node person dependent. Declaration public override bool PersonDependent { get; } Property Value Type Description bool Overrides Node.PersonDependent Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetAdditionalSpeechData() Declaration public AdditionalSpeechData GetAdditionalSpeechData() Returns Type Description AdditionalSpeechData | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOptions() Declaration public List<Option> GetOptions() Returns Type Description List<Option> | Edit this page View Source GetSpeech() Declaration public string GetSpeech() Returns Type Description string | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>) Implements IContainSpeech"
  },
  "api/com.absence.dialoguesystem.internals.GotoNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.GotoNode.html",
    "title": "Class GotoNode | absent-dialogues",
    "keywords": "Class GotoNode Node which teleports the flow to a specific DialoguePartNode. Inheritance object Object ScriptableObject Node GotoNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.SetState(Node.NodeState) Node.Clone() Node.Traverse(Action<Node>) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.GotoNode.html\")] public sealed class GotoNode : Node Fields | Edit this page View Source TargetNode The node which will get reached when this goto node gets passed. Declaration [HideInInspector] public DialoguePartNode TargetNode Field Value Type Description DialoguePartNode Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int)"
  },
  "api/com.absence.dialoguesystem.internals.IContainSpeech.html": {
    "href": "api/com.absence.dialoguesystem.internals.IContainSpeech.html",
    "title": "Interface IContainSpeech | absent-dialogues",
    "keywords": "Interface IContainSpeech Interface to use if any of your dialogue elements has a speech, has options or has AdditionalSpeechData. Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public interface IContainSpeech Methods | Edit this page View Source GetAdditionalSpeechData() Declaration AdditionalSpeechData GetAdditionalSpeechData() Returns Type Description AdditionalSpeechData | Edit this page View Source GetOptions() Declaration List<Option> GetOptions() Returns Type Description List<Option> | Edit this page View Source GetSpeech() Declaration string GetSpeech() Returns Type Description string"
  },
  "api/com.absence.dialoguesystem.internals.IContainVariableManipulators.html": {
    "href": "api/com.absence.dialoguesystem.internals.IContainVariableManipulators.html",
    "title": "Interface IContainVariableManipulators | absent-dialogues",
    "keywords": "Interface IContainVariableManipulators Any node subtype with this interface implemented will refresh its VariableComparers and VariableSetters to have the correct reference to the Bank of the current Dialogue everytime the editor window refreshes. Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public interface IContainVariableManipulators Methods | Edit this page View Source GetComparers() A list of comparers which you want to restrict in terms of VariableBank selection Declaration List<NodeVariableComparer> GetComparers() Returns Type Description List<NodeVariableComparer> | Edit this page View Source GetSetters() A list of comparers which you want to restrict in terms of VariableBank selection Declaration List<NodeVariableSetter> GetSetters() Returns Type Description List<NodeVariableSetter>"
  },
  "api/com.absence.dialoguesystem.internals.IPerformEditorRefresh.html": {
    "href": "api/com.absence.dialoguesystem.internals.IPerformEditorRefresh.html",
    "title": "Interface IPerformEditorRefresh | absent-dialogues",
    "keywords": "Interface IPerformEditorRefresh Any node subtype with this interface implemented will get a callback when you change any value in the inspector. Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public interface IPerformEditorRefresh Methods | Edit this page View Source PerformEditorRefresh() Use to declare what to do when any value gets changed in the inspector/ Declaration void PerformEditorRefresh()"
  },
  "api/com.absence.dialoguesystem.internals.Node.NodeState.html": {
    "href": "api/com.absence.dialoguesystem.internals.Node.NodeState.html",
    "title": "Enum Node.NodeState | absent-dialogues",
    "keywords": "Enum Node.NodeState Describes the node's state on the flow. While progressing in the dialogue. Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public enum Node.NodeState Fields Name Description Current Past Unreached"
  },
  "api/com.absence.dialoguesystem.internals.Node.html": {
    "href": "api/com.absence.dialoguesystem.internals.Node.html",
    "title": "Class Node | absent-dialogues",
    "keywords": "Class Node This is the base abstract class to derive from for any new node subtypes. Inheritance object Object ScriptableObject Node ActionNode ConditionNode DecisionSpeechNode DialoguePartNode FastSpeechNode GotoNode RootNode StickyNoteNode TitleNode Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.Node.html\")] public abstract class Node : ScriptableObject Fields | Edit this page View Source Blackboard Declaration [HideInInspector] public Blackboard Blackboard Field Value Type Description Blackboard | Edit this page View Source ExitDialogAfterwards Declaration [Tooltip(\"Toggling this on will make the dialogue exit right after this node getting passed.\")] public bool ExitDialogAfterwards Field Value Type Description bool | Edit this page View Source Guid Declaration [HideInInspector] public string Guid Field Value Type Description string | Edit this page View Source MasterDialogue Declaration [Readonly] public Dialogue MasterDialogue Field Value Type Description Dialogue | Edit this page View Source PersonIndex Index of the person this node depends on (if it is PersonDependent) on the person list of the MasterDialogue. Declaration [HideInInspector] public int PersonIndex Field Value Type Description int | Edit this page View Source Position Declaration [HideInInspector] public Vector2 Position Field Value Type Description Vector2 | Edit this page View Source State Declaration [HideInInspector] public Node.NodeState State Field Value Type Description Node.NodeState Properties | Edit this page View Source DisplayState Will this node display it's state in editor on the flow. Declaration public virtual bool DisplayState { get; } Property Value Type Description bool | Edit this page View Source Person Property which returns the person with the index of PersonIndex from the person list. Declaration [HideInInspector] public Person Person { get; } Property Value Type Description Person | Edit this page View Source PersonDependent Is this node person dependent. Declaration public virtual bool PersonDependent { get; } Property Value Type Description bool | Edit this page View Source ShowInMinimap Will this node be visible on the minimap. Declaration public virtual bool ShowInMinimap { get; } Property Value Type Description bool Methods | Edit this page View Source AddNextNode(Node, int) Use when you connect a new node to a right-side port of this node. Declaration public void AddNextNode(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded The reference value of the node connected. int atPort The port which hold the connection. | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected abstract void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort | Edit this page View Source Clone() Use to clone this node. CAUTION! It works as a traverse function. If you clone any node, it will automatically clone any node connected to it (forward-only). But the GotoNode won't clone the DialoguePartNode referenced to it. Simply because they are not connected directly. Declaration public virtual Node Clone() Returns Type Description Node | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public abstract string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public virtual string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. | Edit this page View Source GetNextNodes() Use to get all of the nodes which are directly connected to this node (only the right-side ones). Declaration public List<(int portIndex, Node node)> GetNextNodes() Returns Type Description List<(int portIndex, Node node)> | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected abstract void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public virtual List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public abstract string GetTitle() Returns Type Description string The title as a string. | Edit this page View Source OnRemoval() Declaration public void OnRemoval() | Edit this page View Source OnValidate() Declaration protected virtual void OnValidate() | Edit this page View Source Pass(params object[]) Declaration public void Pass(params object[] passData) Parameters Type Name Description object[] passData | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected abstract void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData | Edit this page View Source Reach() Declaration public void Reach() | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected abstract void Reach_Inline() | Edit this page View Source RemoveNextNode(int) Use when you disconnect a node from a riht-side port of this node. Declaration public void RemoveNextNode(int atPort) Parameters Type Name Description int atPort The port which handled the disconnection event. | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected abstract void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort | Edit this page View Source SetState(NodeState) Use to set the flow state of this node. Declaration public virtual void SetState(Node.NodeState newState) Parameters Type Name Description Node.NodeState newState | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public virtual void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Events | Edit this page View Source OnPass Action which will get invoked when this node get passed on the flow. Declaration public event Action OnPass Event Type Type Description Action | Edit this page View Source OnReach Action which will get invoked when this node gets reached on the flow. Declaration public event Action OnReach Event Type Type Description Action | Edit this page View Source OnRemove Action which will get invoked when this node gets removed from the dialogue. Declaration public event Action OnRemove Event Type Type Description Action | Edit this page View Source OnSetState Action which will get invoked when the state of this node gets changed. Declaration public event Action<Node.NodeState> OnSetState Event Type Type Description Action<Node.NodeState> | Edit this page View Source OnValidation Action which will get invoked when OnValidate() function gets called. Declaration public event Action OnValidation Event Type Type Description Action"
  },
  "api/com.absence.dialoguesystem.internals.NodeVariableComparer.html": {
    "href": "api/com.absence.dialoguesystem.internals.NodeVariableComparer.html",
    "title": "Class NodeVariableComparer | absent-dialogues",
    "keywords": "Class NodeVariableComparer The comparer specifically designed for working with dialogue nodes. Inheritance object BaseVariableComparer NodeVariableComparer Inherited Members BaseVariableComparer.m_comparisonType BaseVariableComparer.m_targetBankGuid BaseVariableComparer.m_targetVariableName BaseVariableComparer.m_intValue BaseVariableComparer.m_floatValue BaseVariableComparer.m_stringValue BaseVariableComparer.m_boolValue BaseVariableComparer.GetResult() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class NodeVariableComparer : BaseVariableComparer Properties | Edit this page View Source BlackboardBank Bank of the blackboard in context. Declaration public VariableBank BlackboardBank { get; set; } Property Value Type Description VariableBank | Edit this page View Source HasFixedBank Declaration public override bool HasFixedBank { get; } Property Value Type Description bool Overrides com.absence.variablesystem.BaseVariableComparer.HasFixedBank Methods | Edit this page View Source Clone(VariableBank) Use to copy this comparer. Declaration public NodeVariableComparer Clone(VariableBank clonedBlackboardBank) Parameters Type Name Description VariableBank clonedBlackboardBank Cloned blackboard bank. Returns Type Description NodeVariableComparer The clone. | Edit this page View Source GetRuntimeBank() Declaration protected override VariableBank GetRuntimeBank() Returns Type Description VariableBank Overrides com.absence.variablesystem.BaseVariableComparer.GetRuntimeBank() | Edit this page View Source SetBlackboardBank(VariableBank) Use to set the blackboard bank of this comparer. Declaration public void SetBlackboardBank(VariableBank originalBlackboardBank) Parameters Type Name Description VariableBank originalBlackboardBank Target bank."
  },
  "api/com.absence.dialoguesystem.internals.NodeVariableSetter.html": {
    "href": "api/com.absence.dialoguesystem.internals.NodeVariableSetter.html",
    "title": "Class NodeVariableSetter | absent-dialogues",
    "keywords": "Class NodeVariableSetter The setter specifically designed for working with dialogue nodes. Inheritance object BaseVariableSetter NodeVariableSetter Inherited Members BaseVariableSetter.m_setType BaseVariableSetter.m_targetBankGuid BaseVariableSetter.m_targetVariableName BaseVariableSetter.m_intValue BaseVariableSetter.m_floatValue BaseVariableSetter.m_stringValue BaseVariableSetter.m_boolValue BaseVariableSetter.Perform() BaseVariableSetter.Perform_Boolean(VariableBank) BaseVariableSetter.Perform_String(VariableBank) BaseVariableSetter.Perform_Float(VariableBank) BaseVariableSetter.Perform_Int(VariableBank) Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class NodeVariableSetter : BaseVariableSetter Properties | Edit this page View Source BlackboardBank Bank of the blackboard in context. Declaration public VariableBank BlackboardBank { get; set; } Property Value Type Description VariableBank | Edit this page View Source HasFixedBank Declaration public override bool HasFixedBank { get; } Property Value Type Description bool Overrides com.absence.variablesystem.BaseVariableSetter.HasFixedBank Methods | Edit this page View Source Clone(VariableBank) Use to copy this setter. Declaration public NodeVariableSetter Clone(VariableBank clonedVariableBank) Parameters Type Name Description VariableBank clonedVariableBank Returns Type Description NodeVariableSetter The clone. | Edit this page View Source GetRuntimeBank() Declaration protected override VariableBank GetRuntimeBank() Returns Type Description VariableBank Overrides com.absence.variablesystem.BaseVariableSetter.GetRuntimeBank() | Edit this page View Source SetBlackboardBank(VariableBank) Use to set the blackboard bank of this setter. Declaration public void SetBlackboardBank(VariableBank originalBlackboardBank) Parameters Type Name Description VariableBank originalBlackboardBank Target bank."
  },
  "api/com.absence.dialoguesystem.internals.Option.ShowIf.html": {
    "href": "api/com.absence.dialoguesystem.internals.Option.ShowIf.html",
    "title": "Class Option.ShowIf | absent-dialogues",
    "keywords": "Class Option.ShowIf A class specifically designed for calculating an option's visibility. Inheritance object Option.ShowIf Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.Option.ShowIf.html\")] public class Option.ShowIf Fields | Edit this page View Source Processor An enum which defines what to do with multiple comparers in conclusion. Declaration public VBProcessType Processor Field Value Type Description VBProcessType | Edit this page View Source ShowIfList A list of all VariableComparers which has a role on determining this option's visibility on display. Declaration public List<NodeVariableComparer> ShowIfList Field Value Type Description List<NodeVariableComparer> Methods | Edit this page View Source Clone(VariableBank) Use to clone this instance. Declaration public Option.ShowIf Clone(VariableBank overrideBank) Parameters Type Name Description VariableBank overrideBank Returns Type Description Option.ShowIf | Edit this page View Source GetResult() Use to get the composite result of all of the comparers of this instance. Declaration public bool GetResult() Returns Type Description bool"
  },
  "api/com.absence.dialoguesystem.internals.Option.html": {
    "href": "api/com.absence.dialoguesystem.internals.Option.html",
    "title": "Class Option | absent-dialogues",
    "keywords": "Class Option The type to hold references to dialogue options. Inheritance object Option Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.Option.html\")] public class Option Fields | Edit this page View Source AdditionalData Additional speech data this option contains. Declaration public AdditionalSpeechData AdditionalData Field Value Type Description AdditionalSpeechData | Edit this page View Source LeadsTo The node this option leads to. Declaration [HideInInspector] public Node LeadsTo Field Value Type Description Node | Edit this page View Source Speech Speech of this option. Declaration [HideInInspector] public string Speech Field Value Type Description string | Edit this page View Source Visibility Declaration [SerializeField] [ShowIf(\"m_useShowIf\")] public Option.ShowIf Visibility Field Value Type Description Option.ShowIf Properties | Edit this page View Source UseShowIf Declaration public bool UseShowIf { get; } Property Value Type Description bool Methods | Edit this page View Source Clone(VariableBank) Use to get a clone of this option. Declaration public Option Clone(VariableBank overrideBank) Parameters Type Name Description VariableBank overrideBank Returns Type Description Option | Edit this page View Source IsVisible() Calculates the visibility of this option. Declaration public bool IsVisible() Returns Type Description bool Returns true if the option is visible, returns false otherwise."
  },
  "api/com.absence.dialoguesystem.internals.RootNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.RootNode.html",
    "title": "Class RootNode | absent-dialogues",
    "keywords": "Class RootNode Node which is essential if you want to have a dialogue graph. Inheritance object Object ScriptableObject Node RootNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.RootNode.html\")] public sealed class RootNode : Node Fields | Edit this page View Source Next Declaration [HideInInspector] public Node Next Field Value Type Description Node Properties | Edit this page View Source DisplayState Will this node display it's state in editor on the flow. Declaration public override bool DisplayState { get; } Property Value Type Description bool Overrides Node.DisplayState Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public override string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. Overrides Node.GetInputPortNameForCreation() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>)"
  },
  "api/com.absence.dialoguesystem.internals.StickyNoteNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.StickyNoteNode.html",
    "title": "Class StickyNoteNode | absent-dialogues",
    "keywords": "Class StickyNoteNode Node which contains a user defined string. Inheritance object Object ScriptableObject Node StickyNoteNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.SetState(Node.NodeState) Node.Clone() Node.Traverse(Action<Node>) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.StickyNoteNode.html\")] public sealed class StickyNoteNode : Node Fields | Edit this page View Source Speech Declaration [HideInInspector] public string Speech Field Value Type Description string Properties | Edit this page View Source DisplayState Will this node display it's state in editor on the flow. Declaration public override bool DisplayState { get; } Property Value Type Description bool Overrides Node.DisplayState | Edit this page View Source ShowInMinimap Will this node be visible on the minimap. Declaration public override bool ShowInMinimap { get; } Property Value Type Description bool Overrides Node.ShowInMinimap Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public override string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. Overrides Node.GetInputPortNameForCreation() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int)"
  },
  "api/com.absence.dialoguesystem.internals.TitleNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.TitleNode.html",
    "title": "Class TitleNode | absent-dialogues",
    "keywords": "Class TitleNode Node which is simply StickyNoteNode but bigger. Inheritance object Object ScriptableObject Node TitleNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.SetState(Node.NodeState) Node.Clone() Node.Traverse(Action<Node>) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [HelpURL(\"https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.internals.TitleNode.html\")] public sealed class TitleNode : Node Fields | Edit this page View Source Speech Declaration [HideInInspector] public string Speech Field Value Type Description string Properties | Edit this page View Source DisplayState Will this node display it's state in editor on the flow. Declaration public override bool DisplayState { get; } Property Value Type Description bool Overrides Node.DisplayState | Edit this page View Source ShowInMinimap Will this node be visible on the minimap. Declaration public override bool ShowInMinimap { get; } Property Value Type Description bool Overrides Node.ShowInMinimap Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public override string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. Overrides Node.GetInputPortNameForCreation() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int)"
  },
  "api/com.absence.dialoguesystem.internals.VBProcessType.html": {
    "href": "api/com.absence.dialoguesystem.internals.VBProcessType.html",
    "title": "Enum VBProcessType | absent-dialogues",
    "keywords": "Enum VBProcessType An enum used to define the way to handle multiple variable manipulators at once. Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public enum VBProcessType Fields Name Description All Any"
  },
  "api/com.absence.dialoguesystem.internals.html": {
    "href": "api/com.absence.dialoguesystem.internals.html",
    "title": "Namespace com.absence.dialoguesystem.internals | absent-dialogues",
    "keywords": "Namespace com.absence.dialoguesystem.internals Classes ActionNode Node which invokes some actions on the flow. AdditionalSpeechData Holds some extra data which you can use on the flow. Blackboard This is a class for holding any variables in the dialogues. It also contains a com.absence.variablesystem.VariableBank. ConditionNode Node which re-routes the flow under some conditions. DecisionSpeechNode Node which displays a speech with options. DialoguePartNode Node which let's you create more and seperate routes. FastSpeechNode Node which displays a speech without options. GotoNode Node which teleports the flow to a specific DialoguePartNode. Node This is the base abstract class to derive from for any new node subtypes. NodeVariableComparer The comparer specifically designed for working with dialogue nodes. NodeVariableSetter The setter specifically designed for working with dialogue nodes. Option The type to hold references to dialogue options. Option.ShowIf A class specifically designed for calculating an option's visibility. RootNode Node which is essential if you want to have a dialogue graph. StickyNoteNode Node which contains a user defined string. TitleNode Node which is simply StickyNoteNode but bigger. Interfaces IContainSpeech Interface to use if any of your dialogue elements has a speech, has options or has AdditionalSpeechData. IContainVariableManipulators Any node subtype with this interface implemented will refresh its VariableComparers and VariableSetters to have the correct reference to the Bank of the current Dialogue everytime the editor window refreshes. Enums Node.NodeState Describes the node's state on the flow. While progressing in the dialogue. VBProcessType An enum used to define the way to handle multiple variable manipulators at once."
  },
  "api/com.absence.variablebanks.FixedVariableComparer.html": {
    "href": "api/com.absence.variablebanks.FixedVariableComparer.html",
    "title": "Class FixedVariableComparer | absent-dialogues",
    "keywords": "Class FixedVariableComparer Comparer with a fixed bank. Inheritance object BaseVariableComparer FixedVariableComparer Inherited Members BaseVariableComparer.GetResult() Namespace: com.absence.variablebanks Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public sealed class FixedVariableComparer : BaseVariableComparer Properties | Edit this page View Source HasFixedBank Will the bank selector be hidden in the editor? Declaration public override bool HasFixedBank { get; } Property Value Type Description bool Overrides BaseVariableComparer.HasFixedBank Methods | Edit this page View Source Clone() Use to clone this comparer. Declaration public FixedVariableComparer Clone() Returns Type Description FixedVariableComparer The clone. | Edit this page View Source Clone(string) Use to clone this comparer. Declaration public FixedVariableComparer Clone(string overrideBankGuid) Parameters Type Name Description string overrideBankGuid Guid for a new bank. Returns Type Description FixedVariableComparer The clone. | Edit this page View Source SetFixedBank(string) Use to set the fixed bank of this fixed comparer. Declaration public void SetFixedBank(string fixedBankGuid) Parameters Type Name Description string fixedBankGuid Guid for the fixed bank."
  },
  "api/com.absence.variablebanks.FixedVariableSetter.html": {
    "href": "api/com.absence.variablebanks.FixedVariableSetter.html",
    "title": "Class FixedVariableSetter | absent-dialogues",
    "keywords": "Class FixedVariableSetter Setter with a fixed bank. Inheritance object BaseVariableSetter FixedVariableSetter Inherited Members BaseVariableSetter.Perform() Namespace: com.absence.variablebanks Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public sealed class FixedVariableSetter : BaseVariableSetter Properties | Edit this page View Source HasFixedBank Will the bank selector be hidden in the editor? Declaration public override bool HasFixedBank { get; } Property Value Type Description bool Overrides BaseVariableSetter.HasFixedBank Methods | Edit this page View Source Clone() Use to clone this setter. Declaration public FixedVariableSetter Clone() Returns Type Description FixedVariableSetter The clone. | Edit this page View Source Clone(string) Use to clone this setter. Declaration public FixedVariableSetter Clone(string overrideBankGuid) Parameters Type Name Description string overrideBankGuid Guid for a new bank. Returns Type Description FixedVariableSetter The clone. | Edit this page View Source SetFixedBank(string) Use to set the fixed bank of this fixed setter. Declaration public void SetFixedBank(string fixedBankGuid) Parameters Type Name Description string fixedBankGuid Guid for the fixed bank."
  },
  "api/com.absence.variablebanks.VariableBank.html": {
    "href": "api/com.absence.variablebanks.VariableBank.html",
    "title": "Class VariableBank | absent-dialogues",
    "keywords": "Class VariableBank The scriptable object represents a bank of variables. Inheritance object Object ScriptableObject VariableBank Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.variablebanks Assembly: Assembly-CSharp-firstpass.dll Syntax public class VariableBank : ScriptableObject Fields | Edit this page View Source Null A constant string that represents a null variable name (with the prefix). Declaration public const string Null = \"null: null\" Field Value Type Description string | Edit this page View Source m_booleans Declaration [SerializeField] protected List<Variable_Boolean> m_booleans Field Value Type Description List<Variable_Boolean> | Edit this page View Source m_floats Declaration [SerializeField] protected List<Variable_Float> m_floats Field Value Type Description List<Variable_Float> | Edit this page View Source m_ints Declaration [SerializeField] protected List<Variable_Integer> m_ints Field Value Type Description List<Variable_Integer> | Edit this page View Source m_strings Declaration [SerializeField] protected List<Variable_String> m_strings Field Value Type Description List<Variable_String> Properties | Edit this page View Source Booleans All of the boolean variables within this bank. Declaration public List<Variable_Boolean> Booleans { get; } Property Value Type Description List<Variable_Boolean> | Edit this page View Source ClonedFrom Returns null if this is not a clone. Returns the original bank if this is a clone. Declaration public VariableBank ClonedFrom { get; } Property Value Type Description VariableBank | Edit this page View Source Floats All of the floating point variables within this bank. Declaration public List<Variable_Float> Floats { get; } Property Value Type Description List<Variable_Float> | Edit this page View Source ForExternalUse If true, this bank won't get cloned in the startup and also will not get shown on the variable bank name lists. Set to true if you'll use direct references of such. For more information, read the docs. Declaration public bool ForExternalUse { get; set; } Property Value Type Description bool | Edit this page View Source Guid Guid of this bank. Declaration public string Guid { get; } Property Value Type Description string | Edit this page View Source Ints All of the integer variables within this bank. Declaration public List<Variable_Integer> Ints { get; } Property Value Type Description List<Variable_Integer> | Edit this page View Source IsClone Use to check if this bank is a clone. Declaration public bool IsClone { get; } Property Value Type Description bool | Edit this page View Source Strings All of the string variables within this bank. Declaration public List<Variable_String> Strings { get; } Property Value Type Description List<Variable_String> Methods | Edit this page View Source AddValueChangeListenerToBoolean(string, Action<VariableValueChangedCallbackContext<bool>>) Use to add a value change callback to a boolean variable with a specific name. Declaration public void AddValueChangeListenerToBoolean(string variableName, Action<VariableValueChangedCallbackContext<bool>> callbackAction) Parameters Type Name Description string variableName Target name. Action<VariableValueChangedCallbackContext<bool>> callbackAction What to do when value of the variable changes. | Edit this page View Source AddValueChangeListenerToFloat(string, Action<VariableValueChangedCallbackContext<float>>) Use to add a value change callback to a floating point variable with a specific name. Declaration public void AddValueChangeListenerToFloat(string variableName, Action<VariableValueChangedCallbackContext<float>> callbackAction) Parameters Type Name Description string variableName Target name. Action<VariableValueChangedCallbackContext<float>> callbackAction What to do when value of the variable changes. | Edit this page View Source AddValueChangeListenerToInt(string, Action<VariableValueChangedCallbackContext<int>>) Use to add a value change callback to an integer variable with a specific name. Declaration public void AddValueChangeListenerToInt(string variableName, Action<VariableValueChangedCallbackContext<int>> callbackAction) Parameters Type Name Description string variableName Target name. Action<VariableValueChangedCallbackContext<int>> callbackAction What to do when value of the variable changes. | Edit this page View Source AddValueChangeListenerToString(string, Action<VariableValueChangedCallbackContext<string>>) Use to add a value change callback to a string variable with a specific name. Declaration public void AddValueChangeListenerToString(string variableName, Action<VariableValueChangedCallbackContext<string>> callbackAction) Parameters Type Name Description string variableName Target name. Action<VariableValueChangedCallbackContext<string>> callbackAction What to do when value of the variable changes. | Edit this page View Source Clone() Use to clone this bank. Declaration public VariableBank Clone() Returns Type Description VariableBank Returns the clone created. | Edit this page View Source GetAllVariableNames() Use to get a list of all variables' names of this bank. Declaration public List<string> GetAllVariableNames() Returns Type Description List<string> A list of variable names. Example: \"example_int\" | Edit this page View Source GetAllVariableNamesWithTypes() Use to get a list of all variables' names of this bank, each one of the names will contain a type prefix. Those prefixes get trimmed when you pass them to any function of a variable bank. Declaration public List<string> GetAllVariableNamesWithTypes() Returns Type Description List<string> A list of all variable names with the prefixes. Example: \"int: example_int\" | Edit this page View Source GetInstance(string) Use to get a cloned bank with a specific Guid. Runtime Only. Declaration public static VariableBank GetInstance(string targetGuid) Parameters Type Name Description string targetGuid Target Guid. Returns Type Description VariableBank Throws an error if a clone with the target Guid does not exist. Returns the bank otherwise. | Edit this page View Source HasAny(string) Use to check if a variable with the target name exists within this bank. Declaration public bool HasAny(string variableName) Parameters Type Name Description string variableName Target name. Returns Type Description bool True if exists, false otherwise. | Edit this page View Source HasBoolean(string) Use to check if a boolean variable with the target name exists within this bank. Declaration public bool HasBoolean(string variableName) Parameters Type Name Description string variableName Target name. Returns Type Description bool True if exists, false otherwise. | Edit this page View Source HasFloat(string) Use to check if a floating point variable with the target name exists within this bank. Declaration public bool HasFloat(string variableName) Parameters Type Name Description string variableName Target name. Returns Type Description bool True if exists, false otherwise. | Edit this page View Source HasInt(string) Use to check if an integer variable with the target name exists within this bank. Declaration public bool HasInt(string variableName) Parameters Type Name Description string variableName Target name. Returns Type Description bool True if exists, false otherwise. | Edit this page View Source HasString(string) Use to check if a string variable with the target name exists within this bank. Declaration public bool HasString(string variableName) Parameters Type Name Description string variableName Target name. Returns Type Description bool True if exists, false otherwise. | Edit this page View Source SetBoolean(string, bool) Use to change a boolean variable's value. Declaration public bool SetBoolean(string variableName, bool newValue) Parameters Type Name Description string variableName Target name. bool newValue New value for the variable. Returns Type Description bool True if value changing process ended successfully. False otherwise. | Edit this page View Source SetFloat(string, float) Use to change a floating point variable's value. Declaration public bool SetFloat(string variableName, float newValue) Parameters Type Name Description string variableName Target name. float newValue New value for the variable. Returns Type Description bool True if value changing process ended successfully. False otherwise. | Edit this page View Source SetInt(string, int) Use to change an integer variable's value. Declaration public bool SetInt(string variableName, int newValue) Parameters Type Name Description string variableName Target name. int newValue New value for the variable. Returns Type Description bool True if value changing process ended successfully. False otherwise. | Edit this page View Source SetString(string, string) Use to change a string variable's value. Declaration public bool SetString(string variableName, string newValue) Parameters Type Name Description string variableName Target name. string newValue New value for the variable. Returns Type Description bool True if value changing process ended successfully. False otherwise. | Edit this page View Source TryGetBoolean(string, out bool) Use to get value of a boolean variable within this bank. Declaration public bool TryGetBoolean(string variableName, out bool value) Parameters Type Name Description string variableName Target name. bool value Value of the variable. Returns Type Description bool True if a variable with the target name exists within the bank. | Edit this page View Source TryGetFloat(string, out float) Use to get value of a floating point variable within this bank. Declaration public bool TryGetFloat(string variableName, out float value) Parameters Type Name Description string variableName Target name. float value Value of the variable. Returns Type Description bool True if a variable with the target name exists within the bank. | Edit this page View Source TryGetInt(string, out int) Use to get value of an integer variable within this bank. Declaration public bool TryGetInt(string variableName, out int value) Parameters Type Name Description string variableName Target name. int value Value of the variable. Returns Type Description bool True if a variable with the target name exists within the bank. | Edit this page View Source TryGetString(string, out string) Use to get value of a string variable within this bank. Declaration public bool TryGetString(string variableName, out string value) Parameters Type Name Description string variableName Target name. string value Value of the variable. Returns Type Description bool True if a variable with the target name exists within the bank. Events | Edit this page View Source OnDestroyAction The action gets invoked when this bank gets destroyed. Declaration public event Action OnDestroyAction Event Type Type Description Action"
  },
  "api/com.absence.variablebanks.VariableBankAcquirer.html": {
    "href": "api/com.absence.variablebanks.VariableBankAcquirer.html",
    "title": "Class VariableBankAcquirer | absent-dialogues",
    "keywords": "Class VariableBankAcquirer A component to reference banks both in editor and runtime. Inheritance object Object Component Behaviour MonoBehaviour VariableBankAcquirer Namespace: com.absence.variablebanks Assembly: Assembly-CSharp-firstpass.dll Syntax public class VariableBankAcquirer : MonoBehaviour Properties | Edit this page View Source Bank Use to get clone of the referenced bank. Runtime only. Declaration public VariableBank Bank { get; } Property Value Type Description VariableBank | Edit this page View Source TargetGuid Use to get the Guid of the referenced bank. Declaration public string TargetGuid { get; } Property Value Type Description string"
  },
  "api/com.absence.variablebanks.VariableBankReference.html": {
    "href": "api/com.absence.variablebanks.VariableBankReference.html",
    "title": "Class VariableBankReference | absent-dialogues",
    "keywords": "Class VariableBankReference The class responsible for letting you reference a VariableBank both in editor and in runtime. You can use the VariableBank class directly if the bank you are referencing is marked as ForExternalUse. For more information, read the docs. Inheritance object VariableBankReference Namespace: com.absence.variablebanks Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class VariableBankReference Properties | Edit this page View Source Bank Use to get the bank referenced. Runtime only. Declaration public VariableBank Bank { get; } Property Value Type Description VariableBank | Edit this page View Source TargetGuid Use to get the referenced bank's Guid. Returns an empty string if no banks referenced. Declaration public string TargetGuid { get; } Property Value Type Description string"
  },
  "api/com.absence.variablebanks.VariableComparer.html": {
    "href": "api/com.absence.variablebanks.VariableComparer.html",
    "title": "Class VariableComparer | absent-dialogues",
    "keywords": "Class VariableComparer Comparer with a dynamic bank you select in editor. Inheritance object BaseVariableComparer VariableComparer Inherited Members BaseVariableComparer.GetResult() Namespace: com.absence.variablebanks Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public sealed class VariableComparer : BaseVariableComparer Properties | Edit this page View Source HasFixedBank Will the bank selector be hidden in the editor? Declaration public override bool HasFixedBank { get; } Property Value Type Description bool Overrides BaseVariableComparer.HasFixedBank Methods | Edit this page View Source Clone() Use to clone this comparer. Declaration public VariableComparer Clone() Returns Type Description VariableComparer The clone. | Edit this page View Source Clone(string) Use to clone this comparer. Declaration public VariableComparer Clone(string overrideBankGuid) Parameters Type Name Description string overrideBankGuid Guid for a new bank. Returns Type Description VariableComparer The clone. | Edit this page View Source SetBankGuid(string) Set this comparer's target bank Guid. Declaration public void SetBankGuid(string newBankGuid) Parameters Type Name Description string newBankGuid New Guid."
  },
  "api/com.absence.variablebanks.VariableSetter.html": {
    "href": "api/com.absence.variablebanks.VariableSetter.html",
    "title": "Class VariableSetter | absent-dialogues",
    "keywords": "Class VariableSetter Setter with a dynamic bank you select in the editor. Inheritance object BaseVariableSetter VariableSetter Inherited Members BaseVariableSetter.Perform() Namespace: com.absence.variablebanks Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public sealed class VariableSetter : BaseVariableSetter Properties | Edit this page View Source HasFixedBank Will the bank selector be hidden in the editor? Declaration public override bool HasFixedBank { get; } Property Value Type Description bool Overrides BaseVariableSetter.HasFixedBank Methods | Edit this page View Source Clone() Use to clone this setter. Declaration public VariableSetter Clone() Returns Type Description VariableSetter The clone. | Edit this page View Source Clone(string) Use to clone this setter. Declaration public VariableSetter Clone(string overrideBankGuid) Parameters Type Name Description string overrideBankGuid Guid for a new bank. Returns Type Description VariableSetter The clone. | Edit this page View Source SetBankGuid(string) Set this setter's target bank Guid. Declaration public void SetBankGuid(string newBankGuid) Parameters Type Name Description string newBankGuid New Guid."
  },
  "api/com.absence.variablebanks.editor.VariableBankAcquirerCustomEditor.html": {
    "href": "api/com.absence.variablebanks.editor.VariableBankAcquirerCustomEditor.html",
    "title": "Class VariableBankAcquirerCustomEditor | absent-dialogues",
    "keywords": "Class VariableBankAcquirerCustomEditor A custom editor script for VariableBankAcquirer. Inheritance object Object ScriptableObject Editor VariableBankAcquirerCustomEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.variablebanks.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [CustomEditor(typeof(VariableBankAcquirer), true)] public class VariableBankAcquirerCustomEditor : Editor Methods | Edit this page View Source OnInspectorGUI() Implement this function to make a custom inspector. Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/com.absence.variablebanks.editor.VariableBankCreationHandler.html": {
    "href": "api/com.absence.variablebanks.editor.VariableBankCreationHandler.html",
    "title": "Class VariableBankCreationHandler | absent-dialogues",
    "keywords": "Class VariableBankCreationHandler The static class responsible for handling variable bank creation via editor menu. Inheritance object VariableBankCreationHandler Namespace: com.absence.variablebanks.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public static class VariableBankCreationHandler"
  },
  "api/com.absence.variablebanks.editor.VariableBankDatabase.html": {
    "href": "api/com.absence.variablebanks.editor.VariableBankDatabase.html",
    "title": "Class VariableBankDatabase | absent-dialogues",
    "keywords": "Class VariableBankDatabase The static class responsible for holding a list of all VariableBanks in the project. Editor only! For runtime, use GetInstance(string) instead. Inheritance object VariableBankDatabase Namespace: com.absence.variablebanks.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [InitializeOnLoad] public static class VariableBankDatabase Properties | Edit this page View Source BanksInAssets All of the banks in the project. Declaration public static List<VariableBank> BanksInAssets { get; } Property Value Type Description List<VariableBank> | Edit this page View Source NoBanks Returns true when there are no variable banks in the project's assets. Declaration public static bool NoBanks { get; } Property Value Type Description bool Methods | Edit this page View Source Exists(string) Use to check if a bank with the target Guid exists. Declaration public static bool Exists(string bankGuid) Parameters Type Name Description string bankGuid Target Guid. Returns Type Description bool True if exists, false otherwise. | Edit this page View Source GetBankIfExists(string) Declaration public static VariableBank GetBankIfExists(string bankGuid) Parameters Type Name Description string bankGuid Returns Type Description VariableBank | Edit this page View Source GetBankNameList() Use to get a list of all variable banks' names. Declaration public static List<string> GetBankNameList() Returns Type Description List<string> Returns a list of all variable banks' (except of the ones marked as ForExternalUse) names. | Edit this page View Source GetIndexOf(string) Get the index of the bank with the target Guid. Declaration public static int GetIndexOf(string bankGuid) Parameters Type Name Description string bankGuid Target Guid. Returns Type Description int Returns -1 if the bank with the target Guid does not exits. Returns the index otherwise. | Edit this page View Source NameToGuid(string) Use to get Guid of a bank with a specific name. Declaration public static string NameToGuid(string bankName) Parameters Type Name Description string bankName Target name. Returns Type Description string Returns null if a bank with the target name does not exist. Returns the Guid otherwise. | Edit this page View Source Refresh() Use to refresh the variable bank database. Declaration public static void Refresh()"
  },
  "api/com.absence.variablebanks.editor.VariableBankReferencePropertyDrawer.html": {
    "href": "api/com.absence.variablebanks.editor.VariableBankReferencePropertyDrawer.html",
    "title": "Class VariableBankReferencePropertyDrawer | absent-dialogues",
    "keywords": "Class VariableBankReferencePropertyDrawer A custom property drawer script for VariableBankReferencePropertyDrawer. Inheritance object GUIDrawer PropertyDrawer VariableBankReferencePropertyDrawer Inherited Members PropertyDrawer.CreatePropertyGUI(SerializedProperty) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel Namespace: com.absence.variablebanks.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [CustomPropertyDrawer(typeof(VariableBankReference), true)] public class VariableBankReferencePropertyDrawer : PropertyDrawer Methods | Edit this page View Source GetPropertyHeight(SerializedProperty, GUIContent) Override this method to specify how tall the GUI for this field is in pixels. Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. GUIContent label The label of this property. Returns Type Description float The height in pixels. Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) | Edit this page View Source OnGUI(Rect, SerializedProperty, GUIContent) Override this method to make your own IMGUI based GUI for the property. Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position Rectangle on the screen to use for the property GUI. SerializedProperty property The SerializedProperty to make the custom GUI for. GUIContent label The label of this property. Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/com.absence.variablebanks.editor.VariableComparerDrawer.html": {
    "href": "api/com.absence.variablebanks.editor.VariableComparerDrawer.html",
    "title": "Class VariableComparerDrawer | absent-dialogues",
    "keywords": "Class VariableComparerDrawer A custom property drawer for BaseVariableComparer. Inheritance object GUIDrawer PropertyDrawer VariableComparerDrawer Inherited Members PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel Namespace: com.absence.variablebanks.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [CustomPropertyDrawer(typeof(BaseVariableComparer), true)] public class VariableComparerDrawer : PropertyDrawer Fields | Edit this page View Source StyleSheetPath Path of the uss file. Declaration protected static readonly string StyleSheetPath Field Value Type Description string Methods | Edit this page View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty) | Edit this page View Source DrawGUI(VisualElement, SerializedProperty) Declaration protected virtual VisualElement DrawGUI(VisualElement container, SerializedProperty property) Parameters Type Name Description VisualElement container SerializedProperty property Returns Type Description VisualElement | Edit this page View Source GetPropertyHeight(SerializedProperty, GUIContent) Override this method to specify how tall the GUI for this field is in pixels. Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. GUIContent label The label of this property. Returns Type Description float The height in pixels. Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) | Edit this page View Source OnGUI(Rect, SerializedProperty, GUIContent) Override this method to make your own IMGUI based GUI for the property. Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position Rectangle on the screen to use for the property GUI. SerializedProperty property The SerializedProperty to make the custom GUI for. GUIContent label The label of this property. Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/com.absence.variablebanks.editor.VariableSetterDrawer.html": {
    "href": "api/com.absence.variablebanks.editor.VariableSetterDrawer.html",
    "title": "Class VariableSetterDrawer | absent-dialogues",
    "keywords": "Class VariableSetterDrawer A custom property drawer script for BaseVariableSetter. Inheritance object GUIDrawer PropertyDrawer VariableSetterDrawer Inherited Members PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel Namespace: com.absence.variablebanks.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax [CustomPropertyDrawer(typeof(BaseVariableSetter), true)] public class VariableSetterDrawer : PropertyDrawer Fields | Edit this page View Source StyleSheetPath Path of the uss file. Declaration protected static readonly string StyleSheetPath Field Value Type Description string Methods | Edit this page View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty) | Edit this page View Source GetPropertyHeight(SerializedProperty, GUIContent) Override this method to specify how tall the GUI for this field is in pixels. Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. GUIContent label The label of this property. Returns Type Description float The height in pixels. Overrides UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty, UnityEngine.GUIContent) | Edit this page View Source OnGUI(Rect, SerializedProperty, GUIContent) Override this method to make your own IMGUI based GUI for the property. Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position Rectangle on the screen to use for the property GUI. SerializedProperty property The SerializedProperty to make the custom GUI for. GUIContent label The label of this property. Overrides UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect, UnityEditor.SerializedProperty, UnityEngine.GUIContent)"
  },
  "api/com.absence.variablebanks.editor.html": {
    "href": "api/com.absence.variablebanks.editor.html",
    "title": "Namespace com.absence.variablebanks.editor | absent-dialogues",
    "keywords": "Namespace com.absence.variablebanks.editor Classes VariableBankAcquirerCustomEditor A custom editor script for VariableBankAcquirer. VariableBankCreationHandler The static class responsible for handling variable bank creation via editor menu. VariableBankDatabase The static class responsible for holding a list of all VariableBanks in the project. Editor only! For runtime, use GetInstance(string) instead. VariableBankReferencePropertyDrawer A custom property drawer script for VariableBankReferencePropertyDrawer. VariableComparerDrawer A custom property drawer for BaseVariableComparer. VariableSetterDrawer A custom property drawer script for BaseVariableSetter."
  },
  "api/com.absence.variablebanks.html": {
    "href": "api/com.absence.variablebanks.html",
    "title": "Namespace com.absence.variablebanks | absent-dialogues",
    "keywords": "Namespace com.absence.variablebanks Classes FixedVariableComparer Comparer with a fixed bank. FixedVariableSetter Setter with a fixed bank. VariableBank The scriptable object represents a bank of variables. VariableBankAcquirer A component to reference banks both in editor and runtime. VariableBankReference The class responsible for letting you reference a VariableBank both in editor and in runtime. You can use the VariableBank class directly if the bank you are referencing is marked as ForExternalUse. For more information, read the docs. VariableComparer Comparer with a dynamic bank you select in editor. VariableSetter Setter with a dynamic bank you select in the editor."
  },
  "api/com.absence.variablebanks.internals.BaseVariableComparer.ComparisonType.html": {
    "href": "api/com.absence.variablebanks.internals.BaseVariableComparer.ComparisonType.html",
    "title": "Enum BaseVariableComparer.ComparisonType | absent-dialogues",
    "keywords": "Enum BaseVariableComparer.ComparisonType An enum for deciding how the comparison will get performed. Namespace: com.absence.variablebanks.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public enum BaseVariableComparer.ComparisonType Fields Name Description EqualsTo GreaterOrEqual GreaterThan LessOrEqual LessThan NotEquals"
  },
  "api/com.absence.variablebanks.internals.BaseVariableComparer.html": {
    "href": "api/com.absence.variablebanks.internals.BaseVariableComparer.html",
    "title": "Class BaseVariableComparer | absent-dialogues",
    "keywords": "Class BaseVariableComparer The base class for comparers. Inheritance object BaseVariableComparer NodeVariableComparer FixedVariableComparer VariableComparer Namespace: com.absence.variablebanks.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public abstract class BaseVariableComparer Fields | Edit this page View Source m_boolValue Declaration [SerializeField] protected bool m_boolValue Field Value Type Description bool | Edit this page View Source m_comparisonType Declaration [SerializeField] protected BaseVariableComparer.ComparisonType m_comparisonType Field Value Type Description BaseVariableComparer.ComparisonType | Edit this page View Source m_floatValue Declaration [SerializeField] protected float m_floatValue Field Value Type Description float | Edit this page View Source m_intValue Declaration [SerializeField] protected int m_intValue Field Value Type Description int | Edit this page View Source m_stringValue Declaration [SerializeField] protected string m_stringValue Field Value Type Description string | Edit this page View Source m_targetBankGuid Declaration [SerializeField] protected string m_targetBankGuid Field Value Type Description string | Edit this page View Source m_targetVariableName Declaration [SerializeField] protected string m_targetVariableName Field Value Type Description string Properties | Edit this page View Source HasFixedBank Will the bank selector be hidden in the editor? Declaration public abstract bool HasFixedBank { get; } Property Value Type Description bool Methods | Edit this page View Source GetResult() Use to get the result of the comparer. Runtime only. Declaration public virtual bool GetResult() Returns Type Description bool Result of the comparer. Returns true directly if anything goes wrong. | Edit this page View Source GetRuntimeBank() Override to define how this comparer will find it's runtime bank. Declaration protected virtual VariableBank GetRuntimeBank() Returns Type Description VariableBank The runtime bank or null"
  },
  "api/com.absence.variablebanks.internals.BaseVariableSetter.SetType.html": {
    "href": "api/com.absence.variablebanks.internals.BaseVariableSetter.SetType.html",
    "title": "Enum BaseVariableSetter.SetType | absent-dialogues",
    "keywords": "Enum BaseVariableSetter.SetType An enum for deciding which way the setting will work. Namespace: com.absence.variablebanks.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public enum BaseVariableSetter.SetType Fields Name Description DecrementBy DivideBy IncrementBy MultipltyBy SetTo"
  },
  "api/com.absence.variablebanks.internals.BaseVariableSetter.html": {
    "href": "api/com.absence.variablebanks.internals.BaseVariableSetter.html",
    "title": "Class BaseVariableSetter | absent-dialogues",
    "keywords": "Class BaseVariableSetter The base class for setters. Inheritance object BaseVariableSetter NodeVariableSetter FixedVariableSetter VariableSetter Namespace: com.absence.variablebanks.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public abstract class BaseVariableSetter Fields | Edit this page View Source m_boolValue Declaration [SerializeField] protected bool m_boolValue Field Value Type Description bool | Edit this page View Source m_floatValue Declaration [SerializeField] protected float m_floatValue Field Value Type Description float | Edit this page View Source m_intValue Declaration [SerializeField] protected int m_intValue Field Value Type Description int | Edit this page View Source m_setType Declaration [SerializeField] protected BaseVariableSetter.SetType m_setType Field Value Type Description BaseVariableSetter.SetType | Edit this page View Source m_stringValue Declaration [SerializeField] protected string m_stringValue Field Value Type Description string | Edit this page View Source m_targetBankGuid Declaration [SerializeField] protected string m_targetBankGuid Field Value Type Description string | Edit this page View Source m_targetVariableName Declaration [SerializeField] protected string m_targetVariableName Field Value Type Description string Properties | Edit this page View Source HasFixedBank Will the bank selector be hidden in the editor? Declaration public abstract bool HasFixedBank { get; } Property Value Type Description bool Methods | Edit this page View Source GetRuntimeBank() Override to define how this setter will find it's runtime bank. Declaration protected virtual VariableBank GetRuntimeBank() Returns Type Description VariableBank The runtime bank or null | Edit this page View Source Perform() Sets the target variable in target VariableBank to intended value. Declaration public virtual void Perform() | Edit this page View Source Perform_Boolean(VariableBank) Override to define the logic for booleans. Declaration protected virtual void Perform_Boolean(VariableBank bank) Parameters Type Name Description VariableBank bank Runtime bank. | Edit this page View Source Perform_Float(VariableBank) Override to define the logic for floating points. Declaration protected virtual void Perform_Float(VariableBank bank) Parameters Type Name Description VariableBank bank Runtime bank. | Edit this page View Source Perform_Int(VariableBank) Override to define the logic for integers. Declaration protected virtual void Perform_Int(VariableBank bank) Parameters Type Name Description VariableBank bank Runtime bank. | Edit this page View Source Perform_String(VariableBank) Override to define the logic for strings. Declaration protected virtual void Perform_String(VariableBank bank) Parameters Type Name Description VariableBank bank Runtime bank."
  },
  "api/com.absence.variablebanks.internals.Constants.html": {
    "href": "api/com.absence.variablebanks.internals.Constants.html",
    "title": "Class Constants | absent-dialogues",
    "keywords": "Class Constants The static class responsible for holding the constants variables of the package. Inheritance object Constants Namespace: com.absence.variablebanks.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public static class Constants Fields | Edit this page View Source K_ADDRESSABLES_TAG The addressables label of variable banks if you're using Addressables as the asset management tool. Declaration public const string K_ADDRESSABLES_TAG = \"variable-banks\" Field Value Type Description string | Edit this page View Source K_RESOURCES_PATH The resources path of variable banks if you're using Resources API as the asset management tool. Declaration public const string K_RESOURCES_PATH = \"VariableBanks\" Field Value Type Description string"
  },
  "api/com.absence.variablebanks.internals.VariableBanksCloningHandler.html": {
    "href": "api/com.absence.variablebanks.internals.VariableBanksCloningHandler.html",
    "title": "Class VariableBanksCloningHandler | absent-dialogues",
    "keywords": "Class VariableBanksCloningHandler The static class responsible for cloning the banks at startup. Inheritance object VariableBanksCloningHandler Namespace: com.absence.variablebanks.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public static class VariableBanksCloningHandler Properties | Edit this page View Source CloningCompleted Use to check if the cloning process got completed successfully. Declaration public static bool CloningCompleted { get; } Property Value Type Description bool Methods | Edit this page View Source AddCloningCompleteCallbackOrInvoke(Action) Adds the action passed to OnCloningCompleted if the cloning process is not ended yet. If it is ended already, the action passed gets invoked instantly. Declaration public static bool AddCloningCompleteCallbackOrInvoke(Action callbackContext) Parameters Type Name Description Action callbackContext Returns Type Description bool Events | Edit this page View Source OnCloningCompleted Action which will get invoked when cloning process gets completed successfully. It gets cleared automatically after invoking. Declaration public static event Action OnCloningCompleted Event Type Type Description Action"
  },
  "api/com.absence.variablebanks.internals.html": {
    "href": "api/com.absence.variablebanks.internals.html",
    "title": "Namespace com.absence.variablebanks.internals | absent-dialogues",
    "keywords": "Namespace com.absence.variablebanks.internals Classes BaseVariableComparer The base class for comparers. BaseVariableSetter The base class for setters. Constants The static class responsible for holding the constants variables of the package. VariableBanksCloningHandler The static class responsible for cloning the banks at startup. Enums BaseVariableComparer.ComparisonType An enum for deciding how the comparison will get performed. BaseVariableSetter.SetType An enum for deciding which way the setting will work."
  },
  "api/com.absence.variablebanks.testing.Varcaster.html": {
    "href": "api/com.absence.variablebanks.testing.Varcaster.html",
    "title": "Class Varcaster | absent-dialogues",
    "keywords": "Class Varcaster Inheritance object Object Component Behaviour MonoBehaviour Varcaster Namespace: com.absence.variablebanks.testing Assembly: Assembly-CSharp-firstpass.dll Syntax public class Varcaster : MonoBehaviour"
  },
  "api/com.absence.variablebanks.testing.html": {
    "href": "api/com.absence.variablebanks.testing.html",
    "title": "Namespace com.absence.variablebanks.testing | absent-dialogues",
    "keywords": "Namespace com.absence.variablebanks.testing Classes Varcaster"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "This is the API Documentation. | absent-dialogues",
    "keywords": "This is the API Documentation."
  },
  "docs/advanced/custom-dialogue-extensions.html": {
    "href": "docs/advanced/custom-dialogue-extensions.html",
    "title": "Custom Dialogue Extensions | absent-dialogues",
    "keywords": "Custom Dialogue Extensions In this section of the documentation, you will learn how to write your own dialogue extensions. Let's start. To create custom dialogue extensions, you have to inherit the DialogueExtensionBase class. I highy recommend reading the API Documentation to have a better understanding of the extension concept. If you want to add your custom extension to the 'Add Extension' menu in the context menu of the DialogueInstance, you can copy and paste the code below inside your new extension class. #if UNITY_EDITOR [UnityEditor.MenuItem(\"CONTEXT/DialogueInstance/Add Extension/EXTENSION_NAME\")] static void AddExtensionMenuItem(UnityEditor.MenuCommand command) { DialogueInstance instance = (DialogueInstance)command.context; instance.AddExtension<EXTENSION_TYPE>(); } #endif What's Next? You've done it! You've read all the way to the end, mate. I really appreciate you. Know you don't just know how this tool works in a detailed way but you also know how you can modify it. There is nothing else you need to read. But if you want to know how you can publish any modifications you've made on the tool to the open-source community, I'd suggest you reading Contributing section. And again, thank you for reading this all the way! Have a nice day!"
  },
  "docs/advanced/custom-nodes.html": {
    "href": "docs/advanced/custom-nodes.html",
    "title": "Custom Nodes | absent-dialogues",
    "keywords": "Custom Nodes In this section of the documentation, you will learn how to create your own custom nodes. Let's start. When creating custom nodes, you have three options: Using the Node class as base. Using the ConditionNode class as base. Using the ActionNode class as base. Well, the 2nd and the 3rd options will come with their limitations. Only a little part of their inheritable members are editable. So, if you want to create a unique node, best option is the 1st one. You can find a more detailed information about 2nd and 3rd options in the API Documentation. Using Node as Base Well, the node class has a lot to inherit from. You can find a better list in it's API Documentation section. You can use those metyhodsand properties to create any node you want. Note If you want to create a node which has some really unique features, you might need to modify the NodeView class. This is only necessary if your custom node needs to display or hide some data in the graph. What's Next? This section is ended. Go to Custom Dialogue Extensions to continue."
  },
  "docs/getting-started/components.html": {
    "href": "docs/getting-started/components.html",
    "title": "Components | absent-dialogues",
    "keywords": "Components Components are essential when you're working with a tool which is integrated right into unity. In this section of the documentation, you will get a simple explanation of built-in components that come this tool. Dialogue Displayer Dialogue Displayer is the only built-in way of displaying a dialogue on screen. But you can come up with your own solutions. Warning Dialogue Displayer is a singleton! Use it with this knowledge. Option Text Option Text is a needed component when working with the built-int Dialogue Displayer It is simply responsible for the clicking action, index holding and of course, displaying the option. Tip Dialogue Instance is designed to work with the Dialogue Player. You can read Mechanism page for more details about that class. Dialogue Instance Dialogue Instance is the best way to play a dialogue in your game. It is pretty straight-forward to use. All you have to do is: attach, drag, press play. And you're done! Tip The player section below in the inspector is only visible in play mode. Dialogue Sounds Player Dialogue Sounds Player is the extension component responsible for playing sounds from an audio source, using the information from AdditionalSpeechData. Dialogue Animations Player Dialogue Animations Player is the extension component responsible for managing animator controller over a dialogue, using the information from AdditionalSpeechData. Dialogue Input Handler (Legacy) Dialogue Input Handler (Legacy) is the extension component responsible for handling the input comes from player during the dialogue. It is marked legacy because it only works with the old input system of unity. Note All of the extension components above are derived from the DialogueExtensionBase class. See Custom Dialogue Extensions for more information.. What's Next? Well, you know everything you need to know about this tool right now. But if you want to modify it for your own use, you can go to Advanced to see how you can do it easily."
  },
  "docs/getting-started/mechanism.html": {
    "href": "docs/getting-started/mechanism.html",
    "title": "Mechanism | absent-dialogues",
    "keywords": "Mechanism In this section of the documentation, I'll be explaining you the base mechanism this tool relies on. I highly recommend you to read this section if you want to contribute to this tool or just wnat to expand the tool for your own use. And also, before starting, I recommend you to read the Basic Setup section before reading this one. Let's give it a go! The Graph Here is the demo graph that comes with the tool itself. As you can see, there are nodes, a VariableBank, and an inspector. You will be learning more about these in the further pages, so I won't explain all of them now. Instead, I will be covering the whole concept of this tools working principle in a superficial way. So, when you create a graph, you create a new scriptable object called a Dialogue. And that dialogue comes with it's own another scriptable object, and that one's called the Blackboard VB. Blackboard VB is the same thing with the VariableBank, it just has a special name for itself. The only things you need to know about nodes for now is: they have reference the nodes connected to them by the right-side. So the flow is one-way only. The only node that breaks this rule is the Goto Node. And as you can see, all of the nodes that you create also gets created as an usset under the dialogue you've created. Warning As you may noticed, the RootNode got created by itself, with the dialogue. It is because the root node is a must-have node per dialogue. So, don't try to delete it. Now you know that everything is stored as scriptable object assets on the disk. Let's see when you press play. The Runtime System Here is the demo graph again, but it is on the flow (which means it is used by a dialogue instance). The node with the red outline is the current node that gets displayed on screen, while the gray outliend ones are the 'already seen' ones. But as you can notice from the dialogue field at he top of this window, this is not our original 'Demo.asset' dialogue file. This is a clone dialogue. Well that's how this system works. When you're using a Dialogue Player, it clones the dialogue you referenced on the construction. The purpose with this is to prevent you from losing any data on the flow. None of the changes you've made will write to the disk, they will stay on the memory. Tip You can select a game object with a Dialogue Instance attached in order to see it's cloned dialogue live. The Dialogue Player Dialogue Player is the class responsible for using a dialogue. What it does is pretty simple. Clone the referenced dialogue (when constructor gets called). Let you progress with the 'Continue(...)' function. Let you decide what to do with the current state, and the data of the current node. And that's it! Dialogue Player does not perform anything by itself. It only updates it's state in order for you to know what is going on with the flow. I highly recommend reading the API Documentation of Dialogue player for further information about the functions and the state of it. Warning As said earlier, changes made during play mode (or in-game) does not get saved by default. So, you can write your own save logic over it, or use my absent-saves package. What's Next? This section is ended. Go to Nodes to continue."
  },
  "docs/getting-started/nodes.html": {
    "href": "docs/getting-started/nodes.html",
    "title": "Nodes | absent-dialogues",
    "keywords": "Nodes Nodes are the base elements of this tool. As I said, this is a node based dialogue system. So, In this section of the documentation, you will get a brief explanation of all node types included by default in this tool. Root Node Root Node is automatically created when you create a new graph. This node acts as a starting point in the graph. Because of that, its UNDESTROYABLE!!!. Dialogue Part Node Dialogue Part Node works similar to the Root Node. This is also a starting point node BUT it is not the starting point of the graph itself. It is a starting point of the node chain it is connected to. Goto Node Goto Node is used to seperate the node chains to have a more clear graph window. The only mission of this node is to find the target Dialogue Part Node and teleport to it. Important The relation between the Goto Node and Dialogue Part Node is string prone for now. So, be careful while using them. Fast Speech Node Fast Speech Node is one of the two speech nodes in this tool. This node is used to display a speech that has no options. Decision Speech Node Decision Speech Node does the same thing with the Fast Speech Node. The only difference between them is that the Decision Speech Node has options the player acn choose from. Option Block Option Block is not a Node itself. It is used to display the options of a Decision Speech Node. Text written in the text field of this block will be displayed as an option. Condition Node Condition Node lets you to progress in different ways in the dialogue depending on some conditions. The conditions are based on the Variable Comparers like the ones in the Option Block. Action Node Action Node is pretty self explanatory. It invokes some actions when it gets reached by the dialogue. Tip There is also a property of Action Node called CustomAction() which is a virtual method. And also Action Node one of the two node subtypes which you can derive new subtypes from (they aren't sealed). So, you can derive from Action Node to have a node that has some more specific actions to perform. Sticky Note Node StickyNote is not really a node. It is derived from the node base type and that's all. It has no effect on the dialogue flow. But you can use it to leave some useful notes in the graph view. Title Node Title Node is nearly the same as Sticky Note Node. It is just bigger and easy to see. What's Next? This section is ended. Go to Components to continue."
  },
  "docs/introduction/about.html": {
    "href": "docs/introduction/about.html",
    "title": "About | absent-dialogues",
    "keywords": "About absent-dialogues is a completely free and open-source dialogue system designed specifically for Unity. If you want to contribute, please go to Contributing section. I'd be really happy to see you helping me with this! In this documentation, you will learn how to use, modify and extend the system. You can start learning by reading Installing or Basic Setup."
  },
  "docs/introduction/basic-setup.html": {
    "href": "docs/introduction/basic-setup.html",
    "title": "Basic Setup | absent-dialogues",
    "keywords": "Basic Setup In this section of the documentation, you will see how to use this tool's editor in a pretty basic way. Let's start! Opening up the window You can open up the window via the: 'absencee_/absent-dialogues/Open Dialogue Graph Window' menu option on the Unity's toolbar. Creating a graph You can create a dialogue graph via the: 'absencee_/absent-dialogues/Create Dialogue Graph' menu option on the Unity's toolbar. Adding people to the conversation You can add a person to a dialogue by selecting the dialogue and adding the people to the list in the inspector. Tip You can toggle graph snapping feature via: 'Preferences->Graph Snapping' in the unity editor. What's Next? Now you know the basics. You can go to Mechanism to continue reading about the tool itself. Or you can go to Demos and Examples to have a look at example use cases of the tool."
  },
  "docs/introduction/contributing.html": {
    "href": "docs/introduction/contributing.html",
    "title": "Contributing | absent-dialogues",
    "keywords": "Contributing You can contribute via forking or branching the repository of this package. Please be clear with your commit descriptions. Or you can just point out the issues of the package via the issues tab of github instead of contributing it directly. I appreciate any contribution from small to big, I thank you for all you've done! Have a nice day!"
  },
  "docs/introduction/demos-and-examples.html": {
    "href": "docs/introduction/demos-and-examples.html",
    "title": "Demos and Examples | absent-dialogues",
    "keywords": "Demos and Examples In this section, you will see example use cases of this tool. Let's start! Note I'll also be uploading videos on YouTube about this tool in the future. The Built-in Demo It takes place at the 'Plugins/absencee_/absent-dialogues/Demo' directory, under the Assets folder of your current unity project. You can open up the './TMP/Demo_TMP.unity' scene and press play to give it a try. More? I'll be adding new demos and examples here as I develop games using this tool. You can jump to Mechanism and go on."
  },
  "docs/introduction/installing.html": {
    "href": "docs/introduction/installing.html",
    "title": "Installing | absent-dialogues",
    "keywords": "Installing In this section of the documentation, you will learn how to install this tool and get it ready to use. Note If you've already installed the package, you can skip this section and go to Basic Setup. Prerequisites First of all, this tool depends on some of my other tools. No, no, no, no! Don't run away! They are so lightweight and easy to setup. https://github.com/b1lodHand/absent-attributes.git https://github.com/b1lodHand/absent-utilities.git https://github.com/b1lodHand/absent-people.git https://github.com/b1lodHand/absent-variables.git All you need to do is copying the URLs above and pasting them into you package manager. You can open the Package Manager via the: 'Window/Package Manager' menu on the toolbar of Unity itself. Also, you can find the documentation of these tools in the same links above. Caution Also, you need TextMeshPro installed! You can also find the TextMeshPro via the Package Manager, under the Unity Registry panel. Installing the Package So, you've installed all the things necessary to run this tool. Now, it is the time of installing the tool itself. This step is pretty much straightforward: Go to: https://github.com/b1lodHand/absent-dialogues/releases Find the the best release for you (I'd recommend the latest). Download the \".unitypackage\" file in that release by clicking it. You have it! What's Next? This section is ended. Go to Basic Setup to continue."
  },
  "index.html": {
    "href": "index.html",
    "title": "absent-dialogues | absent-dialogues",
    "keywords": "absent-dialogues Welcome to the documentation of my completely free and open-source package: absent-dialogues. Here you will learn how to use, modify and integrate this package with Unity. You can find more about me in:"
  },
  "roadmap.html": {
    "href": "roadmap.html",
    "title": "Roadmap | absent-dialogues",
    "keywords": "Roadmap In this section of the documentation, you will see some details about the past and the future of this project. Latest Version (v1.1.0) Rewriting the GotoNode and geting rid of string prone code. Better documentation for API and the editor members. Breaking the dependency with absent-variablebanks (in order to reduce complexity). Undo/Redo inspector loading bug fix. Rewrite of the DialogueExtension system. Upcoming Version Not certain yet. Already on the Plans Bugfix: Error when opening the Dialogue Editor Window for the first time. Shift+Space inspector glitch fix. New images and gifs for the documentation. New icons for the components, nodes and etc. An extension based on the absent-saves package. In the Future (Without Certainty) Localization for dialogues. Import/Export/Backup support. Integration with some other applications. Generic option feature. Dialogue override graph feature."
  }
}
{
  "api/com.absence.dialoguesystem.Blackboard.html": {
    "href": "api/com.absence.dialoguesystem.Blackboard.html",
    "title": "Class Blackboard | absent-dialogues Documentation (test)",
    "keywords": "Class Blackboard Inheritance object Blackboard Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class Blackboard Fields | Edit this page View Source Bank Declaration [HideInInspector] public VariableBank Bank Field Value Type Description VariableBank | Edit this page View Source MasterDialogue Declaration [HideInInspector] public Dialogue MasterDialogue Field Value Type Description Dialogue"
  },
  "api/com.absence.dialoguesystem.Dialogue.html": {
    "href": "api/com.absence.dialoguesystem.Dialogue.html",
    "title": "Class Dialogue | absent-dialogues Documentation (test)",
    "keywords": "Class Dialogue The scriptable object derived type that holds all of the data which is essential for a dialogue. Inheritance object Object ScriptableObject Dialogue Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public class Dialogue : ScriptableObject Fields | Edit this page View Source AllNodes A list of all of the nodes that are in this dialogue. Declaration [HideInInspector] public List<Node> AllNodes Field Value Type Description List<Node> | Edit this page View Source Blackboard The Blackboard of this dialogue. Declaration [HideInInspector] public Blackboard Blackboard Field Value Type Description Blackboard | Edit this page View Source LastOrCurrentNode The current node reached while progressing in this dialogue. Or the last one reached before exiting the dialogue. Declaration [HideInInspector] public Node LastOrCurrentNode Field Value Type Description Node | Edit this page View Source RootNode The RootNode of this dialogue. Declaration [HideInInspector] public RootNode RootNode Field Value Type Description RootNode Properties | Edit this page View Source People People in this dialogue (might be overridden on clones). Declaration public List<Person> People { get; } Property Value Type Description List<Person> Methods | Edit this page View Source Clone() Use to clone the dialogue scriptable object. Useful to progress in a copy while keeping the original unchanged. Declaration public Dialogue Clone() Returns Type Description Dialogue | Edit this page View Source CreateNode(Type) Use to create new nodes. Using runtime is not recommended. Declaration public Node CreateNode(Type type) Parameters Type Name Description Type type Returns Type Description Node | Edit this page View Source DeleteNode(Node) Use to delete existing nodes. Using runtime is not recommended. Declaration public void DeleteNode(Node node) Parameters Type Name Description Node node | Edit this page View Source GetAllDialogParts() Use to get a list of all DialoguePartNodes in this dialogue. Declaration public List<DialoguePartNode> GetAllDialogParts() Returns Type Description List<DialoguePartNode> The entire list of DialoguePartNodes in the current dialogue. | Edit this page View Source GetDialogPartNodesWithName(string) Use to find DialoguePartNodes with a specific name. Declaration public List<DialoguePartNode> GetDialogPartNodesWithName(string targetName) Parameters Type Name Description string targetName Returns Type Description List<DialoguePartNode> A list of DialoguePartNodes with that specific name. Throws an exception nothing's found. | Edit this page View Source Initialize() It teleports the flow back to the root node. Declaration public void Initialize() | Edit this page View Source OverridePeople(List<Person>) Use to override the people in this dialogue. Keeping person count the same is highly recommended. The original scriptable object's people list won't be affected by this. CAUTION! The recommended way is to use this function on clones only. Declaration public void OverridePeople(List<Person> overridePeople) Parameters Type Name Description List<Person> overridePeople | Edit this page View Source Pass(params object[]) Use to progress to the next node in the dialogue. Using this method directly is not recommended if you're not adding an extra functionality. You can consider using DialoguePlayer instead. Declaration public void Pass(params object[] passData) Parameters Type Name Description object[] passData"
  },
  "api/com.absence.dialoguesystem.DialogueAnimationsPlayer.WorkMode.html": {
    "href": "api/com.absence.dialoguesystem.DialogueAnimationsPlayer.WorkMode.html",
    "title": "Enum DialogueAnimationsPlayer.WorkMode | absent-dialogues Documentation (test)",
    "keywords": "Enum DialogueAnimationsPlayer.WorkMode Lets you select the way this extension uses the AnimatorMemberName. Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public enum DialogueAnimationsPlayer.WorkMode Fields Name Description CrossFade SetTrigger"
  },
  "api/com.absence.dialoguesystem.DialogueAnimationsPlayer.html": {
    "href": "api/com.absence.dialoguesystem.DialogueAnimationsPlayer.html",
    "title": "Class DialogueAnimationsPlayer | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueAnimationsPlayer A small component which is responsible for playing the animations (if there is any) of the dialogue instance attached to the same game object. Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase DialogueAnimationsPlayer Inherited Members DialogueExtensionBase.m_instance Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [RequireComponent(typeof(DialogueInstance))] [AddComponentMenu(\"absencee_/absent-dialogues/Dialogue Animations Player\")] public class DialogueAnimationsPlayer : DialogueExtensionBase Methods | Edit this page View Source OnHandleAdditionalData(AdditionalSpeechData) Use to define what to do with the current AdditionalSpeechData. Gets called when the m_instance progresses. Declaration public override void OnHandleAdditionalData(AdditionalSpeechData data) Parameters Type Name Description AdditionalSpeechData data Overrides DialogueExtensionBase.OnHandleAdditionalData(AdditionalSpeechData)"
  },
  "api/com.absence.dialoguesystem.DialogueDisplayer.html": {
    "href": "api/com.absence.dialoguesystem.DialogueDisplayer.html",
    "title": "Class DialogueDisplayer | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueDisplayer A singleton with the duty of displaying the current dialogue context. Written for the Unity UI package. Not compatible with the UI Toolkit. Inheritance object Object Component Behaviour MonoBehaviour StaticInstance<DialogueDisplayer> Singleton<DialogueDisplayer> DialogueDisplayer Inherited Members Singleton<DialogueDisplayer>.Awake() StaticInstance<DialogueDisplayer>.OnApplicationQuit() StaticInstance<DialogueDisplayer>.Instance Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [AddComponentMenu(\"absencee_/absent-dialogues/Dialogue Displayer\")] public class DialogueDisplayer : Singleton<DialogueDisplayer> Methods | Edit this page View Source Display(Person, string) Displays a speech with no options. Declaration public void Display(Person speaker, string speech) Parameters Type Name Description Person speaker string speech | Edit this page View Source Display(Person, string, List<Option>, Action<int>) Displays a speech with options. Declaration public void Display(Person speaker, string speech, List<Option> options, Action<int> optionPressAction) Parameters Type Name Description Person speaker string speech List<Option> options Action<int> optionPressAction | Edit this page View Source Occupy() Let's you occupy the sinleton. If it is occuppied by any other scripts about dialogues, you can't occupy. Declaration public bool Occupy() Returns Type Description bool Returns false if the displayer is already occupied. Returns true otherwise. | Edit this page View Source Release() Removes the occupience of the displayer. CAUTION! DialogueDisplayer does not hold a reference to the current occupier. Because of that, be careful calling this function. Declaration public void Release()"
  },
  "api/com.absence.dialoguesystem.DialogueExtensionBase.html": {
    "href": "api/com.absence.dialoguesystem.DialogueExtensionBase.html",
    "title": "Class DialogueExtensionBase | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueExtensionBase This is the base class to derive from in order to handle some custom logic over the system. Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase DialogueAnimationsPlayer DialogueInputHandler_Legacy DialogueSoundsPlayer Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [RequireComponent(typeof(DialogueInstance))] public abstract class DialogueExtensionBase : MonoBehaviour Fields | Edit this page View Source m_instance DialogueInstance component attached to the current gameobject. Declaration [SerializeField] [Readonly] protected DialogueInstance m_instance Field Value Type Description DialogueInstance Methods | Edit this page View Source OnHandleAdditionalData(AdditionalSpeechData) Use to define what to do with the current AdditionalSpeechData. Gets called when the m_instance progresses. Declaration public abstract void OnHandleAdditionalData(AdditionalSpeechData data) Parameters Type Name Description AdditionalSpeechData data"
  },
  "api/com.absence.dialoguesystem.DialogueInputHandler_Legacy.html": {
    "href": "api/com.absence.dialoguesystem.DialogueInputHandler_Legacy.html",
    "title": "Class DialogueInputHandler_Legacy | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueInputHandler_Legacy Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase DialogueInputHandler_Legacy Inherited Members DialogueExtensionBase.m_instance Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public class DialogueInputHandler_Legacy : DialogueExtensionBase Methods | Edit this page View Source OnHandleAdditionalData(AdditionalSpeechData) Use to define what to do with the current AdditionalSpeechData. Gets called when the m_instance progresses. Declaration public override void OnHandleAdditionalData(AdditionalSpeechData data) Parameters Type Name Description AdditionalSpeechData data Overrides DialogueExtensionBase.OnHandleAdditionalData(AdditionalSpeechData)"
  },
  "api/com.absence.dialoguesystem.DialogueInstance.BeforeSpeechEventHandler.html": {
    "href": "api/com.absence.dialoguesystem.DialogueInstance.BeforeSpeechEventHandler.html",
    "title": "Delegate DialogueInstance.BeforeSpeechEventHandler | absent-dialogues Documentation (test)",
    "keywords": "Delegate DialogueInstance.BeforeSpeechEventHandler Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public delegate void DialogueInstance.BeforeSpeechEventHandler(ref Person speaker, ref string speech, ref List<Option> options) Parameters Type Name Description Person speaker string speech List<Option> options"
  },
  "api/com.absence.dialoguesystem.DialogueInstance.html": {
    "href": "api/com.absence.dialoguesystem.DialogueInstance.html",
    "title": "Class DialogueInstance | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueInstance Lets you manage a single DialoguePlayer in the scene easily. Inheritance object Object Component Behaviour MonoBehaviour DialogueInstance Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [AddComponentMenu(\"absencee_/absent-dialogues/Dialogue Instance\")] public class DialogueInstance : MonoBehaviour Properties | Edit this page View Source Player DialoguePlayer of this instance. Declaration public DialoguePlayer Player { get; } Property Value Type Description DialoguePlayer Methods | Edit this page View Source AddExtension<T>() Adds a DialogueExtensionBase to the target dialogue instance. Does not work runtime. Declaration public void AddExtension<T>() where T : DialogueExtensionBase Type Parameters Name Description T | Edit this page View Source EnterDialogue() Use to enter dialogue. Declaration public bool EnterDialogue() Returns Type Description bool False if the DialogueDisplayer is already occupied by any other script. Returns true otherwise. | Edit this page View Source ExitDialogue() Use to exit current dialogue. Declaration public void ExitDialogue() Events | Edit this page View Source OnBeforeSpeech Subscribe to this delegate to override any data will get displayed. Declaration public event DialogueInstance.BeforeSpeechEventHandler OnBeforeSpeech Event Type Type Description DialogueInstance.BeforeSpeechEventHandler | Edit this page View Source OnHandleAdditionalData The Action which will get invoked when HandleAdditionalData() gets called. Declaration public event Action<AdditionalSpeechData> OnHandleAdditionalData Event Type Type Description Action<AdditionalSpeechData>"
  },
  "api/com.absence.dialoguesystem.DialogueOptionText.html": {
    "href": "api/com.absence.dialoguesystem.DialogueOptionText.html",
    "title": "Class DialogueOptionText | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueOptionText A small component that manages the functionality of an option's drawing and input. Inheritance object Object Component Behaviour MonoBehaviour DialogueOptionText Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [AddComponentMenu(\"absencee_/absent-dialogues/Option Text\")] public class DialogueOptionText : MonoBehaviour Methods | Edit this page View Source Initialize(int, string) Sets the index and the text of this option. Declaration public void Initialize(int optionIndex, string text) Parameters Type Name Description int optionIndex string text | Edit this page View Source OnClick() Calls OnClickAction. Declaration public void OnClick() Events | Edit this page View Source OnClickAction Declaration public event Action<int> OnClickAction Event Type Type Description Action<int>"
  },
  "api/com.absence.dialoguesystem.DialoguePlayer.DialoguePlayerState.html": {
    "href": "api/com.absence.dialoguesystem.DialoguePlayer.DialoguePlayerState.html",
    "title": "Enum DialoguePlayer.DialoguePlayerState | absent-dialogues Documentation (test)",
    "keywords": "Enum DialoguePlayer.DialoguePlayerState Shows what state the dialogue is in. Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public enum DialoguePlayer.DialoguePlayerState Fields Name Description Idle WaitingForOption WaitingForSkip WillExit"
  },
  "api/com.absence.dialoguesystem.DialoguePlayer.PlayerState.html": {
    "href": "api/com.absence.dialoguesystem.DialoguePlayer.PlayerState.html",
    "title": "Enum DialoguePlayer.PlayerState | absent-dialogues Documentation (test)",
    "keywords": "Enum DialoguePlayer.PlayerState Shows what state the dialogue player is in. Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public enum DialoguePlayer.PlayerState Fields Name Description NoSpeech WaitingForOption WaitingForSkip WillExit"
  },
  "api/com.absence.dialoguesystem.DialoguePlayer.html": {
    "href": "api/com.absence.dialoguesystem.DialoguePlayer.html",
    "title": "Class DialoguePlayer | absent-dialogues Documentation (test)",
    "keywords": "Class DialoguePlayer Lets you progress in a dialogue easily. Inheritance object DialoguePlayer Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class DialoguePlayer Constructors | Edit this page View Source DialoguePlayer(Dialogue) Use to create a new DialoguePlayer. Declaration public DialoguePlayer(Dialogue dialogue) Parameters Type Name Description Dialogue dialogue The original dialogue to clone from. | Edit this page View Source DialoguePlayer(Dialogue, List<Person>) Use to create a new DialoguePlayer with an overridden people list. Declaration public DialoguePlayer(Dialogue dialogue, List<Person> overridePeople) Parameters Type Name Description Dialogue dialogue The original dialogue to clone from. List<Person> overridePeople The list of new people. Properties | Edit this page View Source AdditionalSpeechData Additional data of the current node. Declaration public AdditionalSpeechData AdditionalSpeechData { get; } Property Value Type Description AdditionalSpeechData | Edit this page View Source ClonedDialogue The dialogue cloned from the original one from constructor. Declaration public Dialogue ClonedDialogue { get; } Property Value Type Description Dialogue | Edit this page View Source HasOptions Use to check if current node is a FastSpeechNode or not. Declaration public bool HasOptions { get; } Property Value Type Description bool | Edit this page View Source HasPerson Use to check if current node PersonDependent or not. Declaration public bool HasPerson { get; } Property Value Type Description bool | Edit this page View Source HasSpeech Use to check if current node is a IContainSpeech or not. Declaration public bool HasSpeech { get; } Property Value Type Description bool | Edit this page View Source Options Options of the current node, if there is any. Declaration public List<Option> Options { get; } Property Value Type Description List<Option> | Edit this page View Source Speaker Person who speaks. Declaration public Person Speaker { get; } Property Value Type Description Person | Edit this page View Source Speech Speech of the current node. Declaration public string Speech { get; } Property Value Type Description string | Edit this page View Source State Current state of the player. Declaration public DialoguePlayer.PlayerState State { get; } Property Value Type Description DialoguePlayer.PlayerState Methods | Edit this page View Source Continue(params object[]) Use to progress in the target dialogue wih some optional data. Declaration public void Continue(params object[] passData) Parameters Type Name Description object[] passData Anything that you want to pass as data. (e.g. DecisionSpeechNode uses the [0] element to get the selected option index.) | Edit this page View Source TeleportToRoot() Teleports the flow to the RootNode of the dialogue clone. Declaration public void TeleportToRoot() Events | Edit this page View Source OnContinue Action which will get invoked when Continue(params object[]) gets called. Declaration public event Action<DialoguePlayer.PlayerState> OnContinue Event Type Type Description Action<DialoguePlayer.PlayerState>"
  },
  "api/com.absence.dialoguesystem.DialogueSoundsPlayer.html": {
    "href": "api/com.absence.dialoguesystem.DialogueSoundsPlayer.html",
    "title": "Class DialogueSoundsPlayer | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueSoundsPlayer A small component which is responsible for playing the sounds (if there is any) of the DialogueInstance attached to the same gameobject. Inheritance object Object Component Behaviour MonoBehaviour DialogueExtensionBase DialogueSoundsPlayer Inherited Members DialogueExtensionBase.m_instance Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [RequireComponent(typeof(DialogueInstance))] [AddComponentMenu(\"absencee_/absent-dialogues/Dialogue Sounds Player\")] public class DialogueSoundsPlayer : DialogueExtensionBase Methods | Edit this page View Source OnHandleAdditionalData(AdditionalSpeechData) Use to define what to do with the current AdditionalSpeechData. Gets called when the m_instance progresses. Declaration public override void OnHandleAdditionalData(AdditionalSpeechData data) Parameters Type Name Description AdditionalSpeechData data Overrides DialogueExtensionBase.OnHandleAdditionalData(AdditionalSpeechData)"
  },
  "api/com.absence.dialoguesystem.IExternalDialogueElement.html": {
    "href": "api/com.absence.dialoguesystem.IExternalDialogueElement.html",
    "title": "Interface IExternalDialogueElement | absent-dialogues Documentation (test)",
    "keywords": "Interface IExternalDialogueElement Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax public interface IExternalDialogueElement Methods | Edit this page View Source Initialize(Dialogue) Declaration void Initialize(Dialogue dialogue) Parameters Type Name Description Dialogue dialogue"
  },
  "api/com.absence.dialoguesystem.OptionText.html": {
    "href": "api/com.absence.dialoguesystem.OptionText.html",
    "title": "Class OptionText | absent-dialogues Documentation (test)",
    "keywords": "Class OptionText A small component that manages the functionality of an option's drawing and input. Inheritance object Object Component Behaviour MonoBehaviour OptionText Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: com.absence.dialoguesystem Assembly: Assembly-CSharp-firstpass.dll Syntax [AddComponentMenu(\"absencee_/absent-dialogues/Option Text\")] public class OptionText : MonoBehaviour Fields | Edit this page View Source OnClickAction Declaration public Action<int> OnClickAction Field Value Type Description Action<int> Methods | Edit this page View Source Initialize(int, string) Declaration public void Initialize(int optionIndex, string text) Parameters Type Name Description int optionIndex string text | Edit this page View Source OnClick() Declaration public void OnClick()"
  },
  "api/com.absence.dialoguesystem.editor.DialogueEditorWindow.html": {
    "href": "api/com.absence.dialoguesystem.editor.DialogueEditorWindow.html",
    "title": "Class DialogueEditorWindow | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueEditorWindow Inheritance object Object ScriptableObject EditorWindow DialogueEditorWindow Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class DialogueEditorWindow : EditorWindow Methods | Edit this page View Source CreateGUI() Declaration public void CreateGUI() | Edit this page View Source FrameToNode(Node) Declaration public void FrameToNode(Node node) Parameters Type Name Description Node node | Edit this page View Source OnOpenAsset(int, int) Declaration [OnOpenAsset] public static bool OnOpenAsset(int instanceId, int line) Parameters Type Name Description int instanceId int line Returns Type Description bool | Edit this page View Source OpenWindow() Declaration [MenuItem(\"absencee_/absent-dialogues/Open Dialogue Graph Window\")] public static void OpenWindow() | Edit this page View Source SelectNode(Node) Declaration public void SelectNode(Node node) Parameters Type Name Description Node node"
  },
  "api/com.absence.dialoguesystem.editor.DialogueGraphView.UxmlFactory.html": {
    "href": "api/com.absence.dialoguesystem.editor.DialogueGraphView.UxmlFactory.html",
    "title": "Class DialogueGraphView.UxmlFactory | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueGraphView.UxmlFactory Inheritance object BaseUxmlFactory<DialogueGraphView, VisualElement.UxmlTraits> UxmlFactory<DialogueGraphView, VisualElement.UxmlTraits> DialogueGraphView.UxmlFactory Implements IUxmlFactory IBaseUxmlFactory Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class DialogueGraphView.UxmlFactory : UxmlFactory<DialogueGraphView, VisualElement.UxmlTraits>, IUxmlFactory, IBaseUxmlFactory Implements UnityEngine.UIElements.IUxmlFactory UnityEngine.UIElements.IBaseUxmlFactory"
  },
  "api/com.absence.dialoguesystem.editor.DialogueGraphView.html": {
    "href": "api/com.absence.dialoguesystem.editor.DialogueGraphView.html",
    "title": "Class DialogueGraphView | absent-dialogues Documentation (test)",
    "keywords": "Class DialogueGraphView Inheritance object CallbackEventHandler Focusable VisualElement GraphView DialogueGraphView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class DialogueGraphView : GraphView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Edit this page View Source DialogueGraphView() Declaration public DialogueGraphView() Methods | Edit this page View Source BuildContextualMenu(ContextualMenuPopulateEvent) Add menu items to the contextual menu. Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt The event holding the menu to populate. Overrides UnityEditor.Experimental.GraphView.GraphView.BuildContextualMenu(UnityEngine.UIElements.ContextualMenuPopulateEvent) | Edit this page View Source FindNodeView(Node) Declaration public NodeView FindNodeView(Node node) Parameters Type Name Description Node node Returns Type Description NodeView | Edit this page View Source GetCompatiblePorts(Port, NodeAdapter) Get all ports compatible with given port. Declaration public override List<Port> GetCompatiblePorts(Port startPort, NodeAdapter nodeAdapter) Parameters Type Name Description Port startPort Start port to validate against. NodeAdapter nodeAdapter Node adapter. Returns Type Description List<Port> List of compatible ports. Overrides UnityEditor.Experimental.GraphView.GraphView.GetCompatiblePorts(UnityEditor.Experimental.GraphView.Port, UnityEditor.Experimental.GraphView.NodeAdapter) | Edit this page View Source Refresh() Declaration public void Refresh() Events | Edit this page View Source OnNodeSelected Declaration public event Action<NodeView> OnNodeSelected Event Type Type Description Action<NodeView> | Edit this page View Source OnPopulateView Declaration public event Action OnPopulateView Event Type Type Description Action Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/com.absence.dialoguesystem.editor.InspectorView.UxmlFactory.html": {
    "href": "api/com.absence.dialoguesystem.editor.InspectorView.UxmlFactory.html",
    "title": "Class InspectorView.UxmlFactory | absent-dialogues Documentation (test)",
    "keywords": "Class InspectorView.UxmlFactory Inheritance object BaseUxmlFactory<InspectorView, VisualElement.UxmlTraits> UxmlFactory<InspectorView, VisualElement.UxmlTraits> InspectorView.UxmlFactory Implements IUxmlFactory IBaseUxmlFactory Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class InspectorView.UxmlFactory : UxmlFactory<InspectorView, VisualElement.UxmlTraits>, IUxmlFactory, IBaseUxmlFactory Implements UnityEngine.UIElements.IUxmlFactory UnityEngine.UIElements.IBaseUxmlFactory"
  },
  "api/com.absence.dialoguesystem.editor.InspectorView.html": {
    "href": "api/com.absence.dialoguesystem.editor.InspectorView.html",
    "title": "Class InspectorView | absent-dialogues Documentation (test)",
    "keywords": "Class InspectorView Inheritance object CallbackEventHandler Focusable VisualElement InspectorView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class InspectorView : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Edit this page View Source InspectorView() Declaration public InspectorView() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/com.absence.dialoguesystem.editor.NodeView.html": {
    "href": "api/com.absence.dialoguesystem.editor.NodeView.html",
    "title": "Class NodeView | absent-dialogues Documentation (test)",
    "keywords": "Class NodeView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node NodeView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class NodeView : Node, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Edit this page View Source NodeView(Node) Declaration public NodeView(Node node) Parameters Type Name Description Node node Fields | Edit this page View Source Input Declaration public Port Input Field Value Type Description Port | Edit this page View Source K_PERSONDEPENDENT_CLASSNAME Declaration public static string K_PERSONDEPENDENT_CLASSNAME Field Value Type Description string | Edit this page View Source Node Declaration public Node Node Field Value Type Description Node | Edit this page View Source OnNodeSelected Declaration public Action<NodeView> OnNodeSelected Field Value Type Description Action<NodeView> | Edit this page View Source Outputs Declaration public List<Port> Outputs Field Value Type Description List<Port> | Edit this page View Source m_serializedNode Declaration protected SerializedObject m_serializedNode Field Value Type Description SerializedObject Properties | Edit this page View Source Master Declaration public DialogueGraphView Master { get; } Property Value Type Description DialogueGraphView Methods | Edit this page View Source OnSelected() Called when the GraphElement is selected. Declaration public override void OnSelected() Overrides UnityEditor.Experimental.GraphView.GraphElement.OnSelected() | Edit this page View Source OnUnselected() Called when the GraphElement is unselected. Declaration public override void OnUnselected() Overrides UnityEditor.Experimental.GraphView.GraphElement.OnUnselected() | Edit this page View Source SetPosition(Rect) Set node position. Declaration public override void SetPosition(Rect newPos) Parameters Type Name Description Rect newPos New position. Overrides UnityEditor.Experimental.GraphView.Node.SetPosition(UnityEngine.Rect) Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/com.absence.dialoguesystem.editor.VariableBankCreationHandler.html": {
    "href": "api/com.absence.dialoguesystem.editor.VariableBankCreationHandler.html",
    "title": "Class VariableBankCreationHandler | absent-dialogues Documentation (test)",
    "keywords": "Class VariableBankCreationHandler Inheritance object VariableBankCreationHandler Namespace: com.absence.dialoguesystem.editor Assembly: Assembly-CSharp-Editor-firstpass.dll Syntax public class VariableBankCreationHandler"
  },
  "api/com.absence.dialoguesystem.editor.html": {
    "href": "api/com.absence.dialoguesystem.editor.html",
    "title": "Namespace com.absence.dialoguesystem.editor | absent-dialogues Documentation (test)",
    "keywords": "Namespace com.absence.dialoguesystem.editor Classes DialogueEditorWindow DialogueGraphView DialogueGraphView.UxmlFactory InspectorView InspectorView.UxmlFactory NodeView VariableBankCreationHandler"
  },
  "api/com.absence.dialoguesystem.html": {
    "href": "api/com.absence.dialoguesystem.html",
    "title": "Namespace com.absence.dialoguesystem | absent-dialogues Documentation (test)",
    "keywords": "Namespace com.absence.dialoguesystem Classes Dialogue The scriptable object derived type that holds all of the data which is essential for a dialogue. DialogueAnimationsPlayer A small component which is responsible for playing the animations (if there is any) of the dialogue instance attached to the same game object. DialogueDisplayer A singleton with the duty of displaying the current dialogue context. Written for the Unity UI package. Not compatible with the UI Toolkit. DialogueExtensionBase This is the base class to derive from in order to handle some custom logic over the system. DialogueInputHandler_Legacy DialogueInstance Lets you manage a single DialoguePlayer in the scene easily. DialogueOptionText A small component that manages the functionality of an option's drawing and input. DialoguePlayer Lets you progress in a dialogue easily. DialogueSoundsPlayer A small component which is responsible for playing the sounds (if there is any) of the DialogueInstance attached to the same gameobject. Enums DialogueAnimationsPlayer.WorkMode Lets you select the way this extension uses the AnimatorMemberName. DialoguePlayer.PlayerState Shows what state the dialogue player is in. Delegates DialogueInstance.BeforeSpeechEventHandler"
  },
  "api/com.absence.dialoguesystem.internals.ActionNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.ActionNode.html",
    "title": "Class ActionNode | absent-dialogues Documentation (test)",
    "keywords": "Class ActionNode Node which invokes some actions on the flow. Inheritance object Object ScriptableObject Node ActionNode Implements IContainVariableManipulators Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.GetOutputPortNamesForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public class ActionNode : Node, IContainVariableManipulators Fields | Edit this page View Source Next Declaration [HideInInspector] public Node Next Field Value Type Description Node | Edit this page View Source UnityEvents Declaration public UnityEvent UnityEvents Field Value Type Description UnityEvent | Edit this page View Source VBActions Declaration public List<VariableSetter> VBActions Field Value Type Description List<VariableSetter> Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source CustomAction() Declaration protected virtual void CustomAction() | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetComparers() A list of comparers which you want to restrict in terms of com.absence.variablesystem.VariableBank selection Declaration public List<VariableComparer> GetComparers() Returns Type Description List<VariableComparer> | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetSetters() A list of comparers which you want to restrict in terms of com.absence.variablesystem.VariableBank selection Declaration public List<VariableSetter> GetSetters() Returns Type Description List<VariableSetter> | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>) Implements IContainVariableManipulators"
  },
  "api/com.absence.dialoguesystem.internals.AdditionalSpeechData.html": {
    "href": "api/com.absence.dialoguesystem.internals.AdditionalSpeechData.html",
    "title": "Class AdditionalSpeechData | absent-dialogues Documentation (test)",
    "keywords": "Class AdditionalSpeechData Inheritance object AdditionalSpeechData Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class AdditionalSpeechData Properties | Edit this page View Source AnimatorMemberName Declaration public string AnimatorMemberName { get; } Property Value Type Description string | Edit this page View Source AudioClip Declaration public AudioClip AudioClip { get; } Property Value Type Description AudioClip | Edit this page View Source CustomInfo Declaration public string[] CustomInfo { get; } Property Value Type Description string[] | Edit this page View Source Sprite Declaration public Sprite Sprite { get; } Property Value Type Description Sprite"
  },
  "api/com.absence.dialoguesystem.internals.Blackboard.html": {
    "href": "api/com.absence.dialoguesystem.internals.Blackboard.html",
    "title": "Class Blackboard | absent-dialogues Documentation (test)",
    "keywords": "Class Blackboard This is a class for holding any variables in the dialogues. It also contains a com.absence.variablesystem.VariableBank. Inheritance object Blackboard Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class Blackboard Fields | Edit this page View Source Bank Bank of this blackboard. Declaration [HideInInspector] public VariableBank Bank Field Value Type Description VariableBank Methods | Edit this page View Source Clone() Use to clone this blackboard. Declaration public Blackboard Clone() Returns Type Description Blackboard"
  },
  "api/com.absence.dialoguesystem.internals.ConditionNode.ProcessType.html": {
    "href": "api/com.absence.dialoguesystem.internals.ConditionNode.ProcessType.html",
    "title": "Enum ConditionNode.ProcessType | absent-dialogues Documentation (test)",
    "keywords": "Enum ConditionNode.ProcessType Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public enum ConditionNode.ProcessType Fields Name Description All Any"
  },
  "api/com.absence.dialoguesystem.internals.ConditionNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.ConditionNode.html",
    "title": "Class ConditionNode | absent-dialogues Documentation (test)",
    "keywords": "Class ConditionNode Node which re-routes the flow under some conditions. Inheritance object Object ScriptableObject Node ConditionNode Implements IContainVariableManipulators Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public class ConditionNode : Node, IContainVariableManipulators Fields | Edit this page View Source Comparers Declaration public List<VariableComparer> Comparers Field Value Type Description List<VariableComparer> | Edit this page View Source FalseNext Declaration [HideInInspector] public Node FalseNext Field Value Type Description Node | Edit this page View Source Processor Declaration public ConditionNode.ProcessType Processor Field Value Type Description ConditionNode.ProcessType | Edit this page View Source TrueNext Declaration [HideInInspector] public Node TrueNext Field Value Type Description Node Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetComparers() A list of comparers which you want to restrict in terms of com.absence.variablesystem.VariableBank selection Declaration public List<VariableComparer> GetComparers() Returns Type Description List<VariableComparer> | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetSetters() A list of comparers which you want to restrict in terms of com.absence.variablesystem.VariableBank selection Declaration public List<VariableSetter> GetSetters() Returns Type Description List<VariableSetter> | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Process() Declaration protected virtual bool Process() Returns Type Description bool | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>) Implements IContainVariableManipulators"
  },
  "api/com.absence.dialoguesystem.internals.DecisionSpeechNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.DecisionSpeechNode.html",
    "title": "Class DecisionSpeechNode | absent-dialogues Documentation (test)",
    "keywords": "Class DecisionSpeechNode Node which displays a speech with options. Inheritance object Object ScriptableObject Node DecisionSpeechNode Implements IContainSpeech IContainVariableManipulators Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public sealed class DecisionSpeechNode : Node, IContainSpeech, IContainVariableManipulators Fields | Edit this page View Source Options Declaration [Space(10)] public List<Option> Options Field Value Type Description List<Option> | Edit this page View Source Speech Declaration [HideInInspector] public string Speech Field Value Type Description string Properties | Edit this page View Source PersonDependent Declaration public override bool PersonDependent { get; } Property Value Type Description bool Overrides Node.PersonDependent Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetAdditionalSpeechData() Declaration public AdditionalSpeechData GetAdditionalSpeechData() Returns Type Description AdditionalSpeechData | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetComparers() A list of comparers which you want to restrict in terms of com.absence.variablesystem.VariableBank selection Declaration public List<VariableComparer> GetComparers() Returns Type Description List<VariableComparer> | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOptions() Declaration public List<Option> GetOptions() Returns Type Description List<Option> | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetSetters() A list of comparers which you want to restrict in terms of com.absence.variablesystem.VariableBank selection Declaration public List<VariableSetter> GetSetters() Returns Type Description List<VariableSetter> | Edit this page View Source GetSpeech() Declaration public string GetSpeech() Returns Type Description string | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>) Implements IContainSpeech IContainVariableManipulators"
  },
  "api/com.absence.dialoguesystem.internals.DialoguePartNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.DialoguePartNode.html",
    "title": "Class DialoguePartNode | absent-dialogues Documentation (test)",
    "keywords": "Class DialoguePartNode Node which let's you create more and seperate routes. Inheritance object Object ScriptableObject Node DialoguePartNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetOutputPortNamesForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public sealed class DialoguePartNode : Node Fields | Edit this page View Source DialoguePartName Declaration public string DialoguePartName Field Value Type Description string | Edit this page View Source Next Declaration [HideInInspector] public Node Next Field Value Type Description Node Properties | Edit this page View Source DisplayState Declaration public override bool DisplayState { get; } Property Value Type Description bool Overrides Node.DisplayState Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public override string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. Overrides Node.GetInputPortNameForCreation() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>)"
  },
  "api/com.absence.dialoguesystem.internals.FastSpeechNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.FastSpeechNode.html",
    "title": "Class FastSpeechNode | absent-dialogues Documentation (test)",
    "keywords": "Class FastSpeechNode Node which displays a speech without options. Inheritance object Object ScriptableObject Node FastSpeechNode Implements IContainSpeech Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.GetOutputPortNamesForCreation() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public sealed class FastSpeechNode : Node, IContainSpeech Fields | Edit this page View Source Next Declaration [HideInInspector] public Node Next Field Value Type Description Node | Edit this page View Source Speech Declaration [HideInInspector] public string Speech Field Value Type Description string Properties | Edit this page View Source PersonDependent Declaration public override bool PersonDependent { get; } Property Value Type Description bool Overrides Node.PersonDependent Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetAdditionalSpeechData() Declaration public AdditionalSpeechData GetAdditionalSpeechData() Returns Type Description AdditionalSpeechData | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOptions() Declaration public List<Option> GetOptions() Returns Type Description List<Option> | Edit this page View Source GetSpeech() Declaration public string GetSpeech() Returns Type Description string | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>) Implements IContainSpeech"
  },
  "api/com.absence.dialoguesystem.internals.GotoNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.GotoNode.html",
    "title": "Class GotoNode | absent-dialogues Documentation (test)",
    "keywords": "Class GotoNode Node which teleports the flow to a specific DialoguePartNode. Inheritance object Object ScriptableObject Node GotoNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.DisplayState Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.GetInputPortNameForCreation() Node.SetState(Node.NodeState) Node.Clone() Node.Traverse(Action<Node>) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public sealed class GotoNode : Node Fields | Edit this page View Source TargetDialogPartName Declaration public string TargetDialogPartName Field Value Type Description string Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int)"
  },
  "api/com.absence.dialoguesystem.internals.IContainSpeech.html": {
    "href": "api/com.absence.dialoguesystem.internals.IContainSpeech.html",
    "title": "Interface IContainSpeech | absent-dialogues Documentation (test)",
    "keywords": "Interface IContainSpeech Interface to use if any of your dialogue elements has a speech, has options or has AdditionalSpeechData. Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public interface IContainSpeech Methods | Edit this page View Source GetAdditionalSpeechData() Declaration AdditionalSpeechData GetAdditionalSpeechData() Returns Type Description AdditionalSpeechData | Edit this page View Source GetOptions() Declaration List<Option> GetOptions() Returns Type Description List<Option> | Edit this page View Source GetSpeech() Declaration string GetSpeech() Returns Type Description string"
  },
  "api/com.absence.dialoguesystem.internals.IContainVariableManipulators.html": {
    "href": "api/com.absence.dialoguesystem.internals.IContainVariableManipulators.html",
    "title": "Interface IContainVariableManipulators | absent-dialogues Documentation (test)",
    "keywords": "Interface IContainVariableManipulators Any node subtype with this interface implemented will refresh its com.absence.variablesystem.VariableComparers and com.absence.variablesystem.VariableSetters to have the correct reference to the Bank of the current Dialogue everytime the editor window refreshes. Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public interface IContainVariableManipulators Methods | Edit this page View Source GetComparers() A list of comparers which you want to restrict in terms of com.absence.variablesystem.VariableBank selection Declaration List<VariableComparer> GetComparers() Returns Type Description List<VariableComparer> | Edit this page View Source GetSetters() A list of comparers which you want to restrict in terms of com.absence.variablesystem.VariableBank selection Declaration List<VariableSetter> GetSetters() Returns Type Description List<VariableSetter>"
  },
  "api/com.absence.dialoguesystem.internals.Node.NodeState.html": {
    "href": "api/com.absence.dialoguesystem.internals.Node.NodeState.html",
    "title": "Enum Node.NodeState | absent-dialogues Documentation (test)",
    "keywords": "Enum Node.NodeState Describes the node's state on the flow. While progressing in the dialogue. Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public enum Node.NodeState Fields Name Description Current Past Unreached"
  },
  "api/com.absence.dialoguesystem.internals.Node.html": {
    "href": "api/com.absence.dialoguesystem.internals.Node.html",
    "title": "Class Node | absent-dialogues Documentation (test)",
    "keywords": "Class Node This is the base abstract class to derive from for any new node subtypes. Inheritance object Object ScriptableObject Node ActionNode ConditionNode DecisionSpeechNode DialoguePartNode FastSpeechNode GotoNode RootNode StickyNoteNode TitleNode Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public abstract class Node : ScriptableObject Fields | Edit this page View Source Blackboard Declaration [HideInInspector] public Blackboard Blackboard Field Value Type Description Blackboard | Edit this page View Source ExitDialogAfterwards Declaration [Tooltip(\"Toggling this on will make the dialogue exit right after this node getting passed.\")] public bool ExitDialogAfterwards Field Value Type Description bool | Edit this page View Source Guid Declaration [HideInInspector] public string Guid Field Value Type Description string | Edit this page View Source MasterDialogue Declaration [HideInInspector] public Dialogue MasterDialogue Field Value Type Description Dialogue | Edit this page View Source PersonIndex Declaration [HideInInspector] public int PersonIndex Field Value Type Description int | Edit this page View Source Position Declaration [HideInInspector] public Vector2 Position Field Value Type Description Vector2 | Edit this page View Source State Declaration [HideInInspector] public Node.NodeState State Field Value Type Description Node.NodeState Properties | Edit this page View Source DisplayState Declaration public virtual bool DisplayState { get; } Property Value Type Description bool | Edit this page View Source Person Declaration [HideInInspector] public Person Person { get; } Property Value Type Description Person | Edit this page View Source PersonDependent Declaration public virtual bool PersonDependent { get; } Property Value Type Description bool | Edit this page View Source ShowInMinimap Declaration public virtual bool ShowInMinimap { get; } Property Value Type Description bool Methods | Edit this page View Source AddNextNode(Node, int) Declaration public void AddNextNode(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected abstract void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort | Edit this page View Source Clone() Use to clone this node. CAUTION! It works as a traverse function. If you clone any node, it will automatically clone any node connected to it (forward-only). But the GotoNode won't clone the DialoguePartNode referenced to it. Simply because they are not connected directly. Declaration public virtual Node Clone() Returns Type Description Node | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public abstract string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public virtual string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. | Edit this page View Source GetNextNodes() Declaration public List<(int portIndex, Node node)> GetNextNodes() Returns Type Description List<(int portIndex, Node node)> | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected abstract void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public virtual List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public abstract string GetTitle() Returns Type Description string The title as a string. | Edit this page View Source OnRemoval() Declaration public void OnRemoval() | Edit this page View Source Pass(params object[]) Declaration public void Pass(params object[] passData) Parameters Type Name Description object[] passData | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected abstract void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData | Edit this page View Source Reach() Declaration public void Reach() | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected abstract void Reach_Inline() | Edit this page View Source RemoveNextNode(int) Declaration public void RemoveNextNode(int atPort) Parameters Type Name Description int atPort | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected abstract void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort | Edit this page View Source SetState(NodeState) Use to set the flow state of this node. Declaration public virtual void SetState(Node.NodeState newState) Parameters Type Name Description Node.NodeState newState | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public virtual void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Events | Edit this page View Source OnPass Declaration public event Action OnPass Event Type Type Description Action | Edit this page View Source OnReach Declaration public event Action OnReach Event Type Type Description Action | Edit this page View Source OnRemove Declaration public event Action OnRemove Event Type Type Description Action | Edit this page View Source OnSetState Declaration public event Action<Node.NodeState> OnSetState Event Type Type Description Action<Node.NodeState> | Edit this page View Source OnValidation Declaration public event Action OnValidation Event Type Type Description Action"
  },
  "api/com.absence.dialoguesystem.internals.Option.html": {
    "href": "api/com.absence.dialoguesystem.internals.Option.html",
    "title": "Class Option | absent-dialogues Documentation (test)",
    "keywords": "Class Option The type to hold references to dialogue options. Inheritance object Option Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax [Serializable] public class Option Fields | Edit this page View Source AdditionalData Additional speech data this option contains. Declaration public AdditionalSpeechData AdditionalData Field Value Type Description AdditionalSpeechData | Edit this page View Source LeadsTo The node this option leads to. Declaration [HideInInspector] public Node LeadsTo Field Value Type Description Node | Edit this page View Source ShowIf The condition checker which decides the visibility of the option. Declaration [HideInInspector] public VariableComparer ShowIf Field Value Type Description VariableComparer | Edit this page View Source Speech Speech of this option. Declaration [HideInInspector] public string Speech Field Value Type Description string | Edit this page View Source UseShowIf Boolean which decides if ShowIf will be used. Declaration [HideInInspector] public bool UseShowIf Field Value Type Description bool Methods | Edit this page View Source Clone(VariableBank) Use to get a clone of this option. Declaration public Option Clone(VariableBank overrideBank) Parameters Type Name Description VariableBank overrideBank Returns Type Description Option"
  },
  "api/com.absence.dialoguesystem.internals.RootNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.RootNode.html",
    "title": "Class RootNode | absent-dialogues Documentation (test)",
    "keywords": "Class RootNode Node which is essential if you want to have a dialogue graph. Inheritance object Object ScriptableObject Node RootNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.ShowInMinimap Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.SetState(Node.NodeState) Node.Clone() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public sealed class RootNode : Node Fields | Edit this page View Source Next Declaration [HideInInspector] public Node Next Field Value Type Description Node Properties | Edit this page View Source DisplayState Declaration public override bool DisplayState { get; } Property Value Type Description bool Overrides Node.DisplayState Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source DelayedClone(Dialogue) This method will get called right after the dialogue gets cloned. Declaration public void DelayedClone(Dialogue originalDialogue) Parameters Type Name Description Dialogue originalDialogue This is the dialogue the cloned dialogue had cloned from. | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public override string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. Overrides Node.GetInputPortNameForCreation() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int) | Edit this page View Source Traverse(Action<Node>) Use to traverse any action on a node chain. Nodes not connected directly won't transmitthe action to another. Declaration public override void Traverse(Action<Node> action) Parameters Type Name Description Action<Node> action Overrides Node.Traverse(Action<Node>)"
  },
  "api/com.absence.dialoguesystem.internals.StickyNoteNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.StickyNoteNode.html",
    "title": "Class StickyNoteNode | absent-dialogues Documentation (test)",
    "keywords": "Class StickyNoteNode Node which contains a user defined string. Inheritance object Object ScriptableObject Node StickyNoteNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.SetState(Node.NodeState) Node.Clone() Node.Traverse(Action<Node>) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public sealed class StickyNoteNode : Node Fields | Edit this page View Source Speech Declaration [HideInInspector] public string Speech Field Value Type Description string Properties | Edit this page View Source DisplayState Declaration public override bool DisplayState { get; } Property Value Type Description bool Overrides Node.DisplayState | Edit this page View Source ShowInMinimap Declaration public override bool ShowInMinimap { get; } Property Value Type Description bool Overrides Node.ShowInMinimap Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public override string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. Overrides Node.GetInputPortNameForCreation() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int)"
  },
  "api/com.absence.dialoguesystem.internals.TitleNode.html": {
    "href": "api/com.absence.dialoguesystem.internals.TitleNode.html",
    "title": "Class TitleNode | absent-dialogues Documentation (test)",
    "keywords": "Class TitleNode Node which is simply StickyNoteNode but bigger. Inheritance object Object ScriptableObject Node TitleNode Inherited Members Node.Guid Node.Position Node.MasterDialogue Node.Blackboard Node.State Node.ExitDialogAfterwards Node.OnSetState Node.OnRemove Node.OnValidation Node.OnReach Node.OnPass Node.PersonIndex Node.Person Node.PersonDependent Node.AddNextNode(Node, int) Node.RemoveNextNode(int) Node.GetNextNodes() Node.Pass(params object[]) Node.Reach() Node.OnRemoval() Node.SetState(Node.NodeState) Node.Clone() Node.Traverse(Action<Node>) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Namespace: com.absence.dialoguesystem.internals Assembly: Assembly-CSharp-firstpass.dll Syntax public sealed class TitleNode : Node Fields | Edit this page View Source Speech Declaration [HideInInspector] public string Speech Field Value Type Description string Properties | Edit this page View Source DisplayState Declaration public override bool DisplayState { get; } Property Value Type Description bool Overrides Node.DisplayState | Edit this page View Source ShowInMinimap Declaration public override bool ShowInMinimap { get; } Property Value Type Description bool Overrides Node.ShowInMinimap Methods | Edit this page View Source AddNextNode_Inline(Node, int) Use to write the functionality of connecting a node to any port of this node. Declaration protected override void AddNextNode_Inline(Node nextWillBeAdded, int atPort) Parameters Type Name Description Node nextWillBeAdded int atPort Overrides Node.AddNextNode_Inline(Node, int) | Edit this page View Source GetClassName() Use if you have a special USS class for this node. If you don't have any, return null. Declaration public override string GetClassName() Returns Type Description string Returns the USS class name of this node type as a string. Overrides Node.GetClassName() | Edit this page View Source GetInputPortNameForCreation() Use to describe the name of the input port of this node. Declaration public override string GetInputPortNameForCreation() Returns Type Description string Returns the name as a string. Return null if you don't want any input ports. Overrides Node.GetInputPortNameForCreation() | Edit this page View Source GetNextNodes_Inline(ref List<(int portIndex, Node node)>) Use to describe the editor which nodes are the next nodes of this one in the chain by modifying the list. Declaration protected override void GetNextNodes_Inline(ref List<(int portIndex, Node node)> result) Parameters Type Name Description List<(int portIndex, Node node)> result Overrides Node.GetNextNodes_Inline(ref List<(int portIndex, Node node)>) | Edit this page View Source GetOutputPortNamesForCreation() Use to describe the dialogue editor how many output ports this node has and what are their names. Declaration public override List<string> GetOutputPortNamesForCreation() Returns Type Description List<string> Returns the port names as a list of strings. Return an empty list if you want no output ports. Overrides Node.GetOutputPortNamesForCreation() | Edit this page View Source GetTitle() Use to set the title of this node type in the graph view. Declaration public override string GetTitle() Returns Type Description string The title as a string. Overrides Node.GetTitle() | Edit this page View Source Pass_Inline(params object[]) Use to write what happenswhen the dialogue passes this node. Declaration protected override void Pass_Inline(params object[] passData) Parameters Type Name Description object[] passData Overrides Node.Pass_Inline(params object[]) | Edit this page View Source Reach_Inline() Use to write what happens when the dialogue reaches this node. Declaration protected override void Reach_Inline() Overrides Node.Reach_Inline() | Edit this page View Source RemoveNextNode_Inline(int) Use to write the functionality of removing the next node of this one. Declaration protected override void RemoveNextNode_Inline(int atPort) Parameters Type Name Description int atPort Overrides Node.RemoveNextNode_Inline(int)"
  },
  "api/com.absence.dialoguesystem.internals.html": {
    "href": "api/com.absence.dialoguesystem.internals.html",
    "title": "Namespace com.absence.dialoguesystem.internals | absent-dialogues Documentation (test)",
    "keywords": "Namespace com.absence.dialoguesystem.internals Classes ActionNode Node which invokes some actions on the flow. AdditionalSpeechData Blackboard This is a class for holding any variables in the dialogues. It also contains a com.absence.variablesystem.VariableBank. ConditionNode Node which re-routes the flow under some conditions. DecisionSpeechNode Node which displays a speech with options. DialoguePartNode Node which let's you create more and seperate routes. FastSpeechNode Node which displays a speech without options. GotoNode Node which teleports the flow to a specific DialoguePartNode. Node This is the base abstract class to derive from for any new node subtypes. Option The type to hold references to dialogue options. RootNode Node which is essential if you want to have a dialogue graph. StickyNoteNode Node which contains a user defined string. TitleNode Node which is simply StickyNoteNode but bigger. Interfaces IContainSpeech Interface to use if any of your dialogue elements has a speech, has options or has AdditionalSpeechData. IContainVariableManipulators Any node subtype with this interface implemented will refresh its com.absence.variablesystem.VariableComparers and com.absence.variablesystem.VariableSetters to have the correct reference to the Bank of the current Dialogue everytime the editor window refreshes. Enums ConditionNode.ProcessType Node.NodeState Describes the node's state on the flow. While progressing in the dialogue."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "This is the API Documentation. | absent-dialogues Documentation (test)",
    "keywords": "This is the API Documentation."
  },
  "getting-started.html": {
    "href": "getting-started.html",
    "title": "Getting Started | absent-dialogues Documentation (test)",
    "keywords": "Getting Started"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | absent-dialogues Documentation (test)",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Table of Contents I'm working on it..."
  },
  "introduction.html": {
    "href": "introduction.html",
    "title": "Introduction | absent-dialogues Documentation (test)",
    "keywords": "Introduction"
  }
}
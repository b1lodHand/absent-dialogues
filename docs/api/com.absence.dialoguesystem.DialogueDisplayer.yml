### YamlMime:ManagedReference
items:
- uid: com.absence.dialoguesystem.DialogueDisplayer
  commentId: T:com.absence.dialoguesystem.DialogueDisplayer
  id: DialogueDisplayer
  parent: com.absence.dialoguesystem
  children:
  - com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person,System.String)
  - com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person,System.String,System.Collections.Generic.List{com.absence.dialoguesystem.internals.Option},System.Action{System.Int32})
  - com.absence.dialoguesystem.DialogueDisplayer.Occupy
  - com.absence.dialoguesystem.DialogueDisplayer.Release
  langs:
  - csharp
  - vb
  name: DialogueDisplayer
  nameWithType: DialogueDisplayer
  fullName: com.absence.dialoguesystem.DialogueDisplayer
  type: Class
  source:
    remote:
      path: absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-dialogues.git
    id: DialogueDisplayer
    path: ../absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.dialoguesystem
  summary: >-
    A singleton with the duty of displaying the current dialogue context. Written for the Unity UI package. Not compatible with

    the UI Toolkit.
  example: []
  syntax:
    content: >-
      [AddComponentMenu("absencee_/absent-dialogues/UI/Dialogue Displayer")]

      [HelpURL("https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueDisplayer.html")]

      public class DialogueDisplayer : Singleton<DialogueDisplayer>
    content.vb: >-
      <AddComponentMenu("absencee_/absent-dialogues/UI/Dialogue Displayer")>

      <HelpURL("https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueDisplayer.html")>

      Public Class DialogueDisplayer Inherits Singleton(Of DialogueDisplayer)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}
  - com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}
  inheritedMembers:
  - com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}.Awake
  - com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}.OnApplicationQuit
  - com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}.Instance
  attributes:
  - type: UnityEngine.AddComponentMenu
    ctor: UnityEngine.AddComponentMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: absencee_/absent-dialogues/UI/Dialogue Displayer
  - type: UnityEngine.HelpURLAttribute
    ctor: UnityEngine.HelpURLAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: https://b1lodhand.github.io/absent-dialogues/api/com.absence.dialoguesystem.DialogueDisplayer.html
- uid: com.absence.dialoguesystem.DialogueDisplayer.Occupy
  commentId: M:com.absence.dialoguesystem.DialogueDisplayer.Occupy
  id: Occupy
  parent: com.absence.dialoguesystem.DialogueDisplayer
  langs:
  - csharp
  - vb
  name: Occupy()
  nameWithType: DialogueDisplayer.Occupy()
  fullName: com.absence.dialoguesystem.DialogueDisplayer.Occupy()
  type: Method
  source:
    remote:
      path: absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-dialogues.git
    id: Occupy
    path: ../absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.dialoguesystem
  summary: Let's you occupy the sinleton. If it is occuppied by any other scripts about dialogues, you can't occupy.
  example: []
  syntax:
    content: public bool Occupy()
    return:
      type: System.Boolean
      description: Returns false if the displayer is already occupied. Returns true otherwise.
    content.vb: Public Function Occupy() As Boolean
  overload: com.absence.dialoguesystem.DialogueDisplayer.Occupy*
- uid: com.absence.dialoguesystem.DialogueDisplayer.Release
  commentId: M:com.absence.dialoguesystem.DialogueDisplayer.Release
  id: Release
  parent: com.absence.dialoguesystem.DialogueDisplayer
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: DialogueDisplayer.Release()
  fullName: com.absence.dialoguesystem.DialogueDisplayer.Release()
  type: Method
  source:
    remote:
      path: absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-dialogues.git
    id: Release
    path: ../absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.dialoguesystem
  summary: >-
    Removes the occupience of the displayer. CAUTION! <xref href="com.absence.dialoguesystem.DialogueDisplayer" data-throw-if-not-resolved="false"></xref> does not hold a reference to the

    current occupier. Because of that, be careful calling this function.
  example: []
  syntax:
    content: public void Release()
    content.vb: Public Sub Release()
  overload: com.absence.dialoguesystem.DialogueDisplayer.Release*
- uid: com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person,System.String)
  commentId: M:com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person,System.String)
  id: Display(com.absence.personsystem.Person,System.String)
  parent: com.absence.dialoguesystem.DialogueDisplayer
  langs:
  - csharp
  - vb
  name: Display(Person, string)
  nameWithType: DialogueDisplayer.Display(Person, string)
  fullName: com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person, string)
  type: Method
  source:
    remote:
      path: absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-dialogues.git
    id: Display
    path: ../absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.dialoguesystem
  summary: Displays a speech with no options.
  example: []
  syntax:
    content: public void Display(Person speaker, string speech)
    parameters:
    - id: speaker
      type: com.absence.personsystem.Person
      description: ''
    - id: speech
      type: System.String
      description: ''
    content.vb: Public Sub Display(speaker As Person, speech As String)
  overload: com.absence.dialoguesystem.DialogueDisplayer.Display*
  nameWithType.vb: DialogueDisplayer.Display(Person, String)
  fullName.vb: com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person, String)
  name.vb: Display(Person, String)
- uid: com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person,System.String,System.Collections.Generic.List{com.absence.dialoguesystem.internals.Option},System.Action{System.Int32})
  commentId: M:com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person,System.String,System.Collections.Generic.List{com.absence.dialoguesystem.internals.Option},System.Action{System.Int32})
  id: Display(com.absence.personsystem.Person,System.String,System.Collections.Generic.List{com.absence.dialoguesystem.internals.Option},System.Action{System.Int32})
  parent: com.absence.dialoguesystem.DialogueDisplayer
  langs:
  - csharp
  - vb
  name: Display(Person, string, List<Option>, Action<int>)
  nameWithType: DialogueDisplayer.Display(Person, string, List<Option>, Action<int>)
  fullName: com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person, string, System.Collections.Generic.List<com.absence.dialoguesystem.internals.Option>, System.Action<int>)
  type: Method
  source:
    remote:
      path: absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-dialogues.git
    id: Display
    path: ../absent-dialogues/Assets/Plugins/absencee_/absent-dialogues/Runtime/Components/DialogueDisplayer.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.dialoguesystem
  summary: Displays a speech with options.
  example: []
  syntax:
    content: public void Display(Person speaker, string speech, List<Option> options, Action<int> optionPressAction)
    parameters:
    - id: speaker
      type: com.absence.personsystem.Person
      description: ''
    - id: speech
      type: System.String
      description: ''
    - id: options
      type: System.Collections.Generic.List{com.absence.dialoguesystem.internals.Option}
      description: ''
    - id: optionPressAction
      type: System.Action{System.Int32}
      description: ''
    content.vb: Public Sub Display(speaker As Person, speech As String, options As List(Of [Option]), optionPressAction As Action(Of Integer))
  overload: com.absence.dialoguesystem.DialogueDisplayer.Display*
  nameWithType.vb: DialogueDisplayer.Display(Person, String, List(Of Option), Action(Of Integer))
  fullName.vb: com.absence.dialoguesystem.DialogueDisplayer.Display(com.absence.personsystem.Person, String, System.Collections.Generic.List(Of com.absence.dialoguesystem.internals.Option), System.Action(Of Integer))
  name.vb: Display(Person, String, List(Of Option), Action(Of Integer))
references:
- uid: com.absence.dialoguesystem
  commentId: N:com.absence.dialoguesystem
  href: com.html
  name: com.absence.dialoguesystem
  nameWithType: com.absence.dialoguesystem
  fullName: com.absence.dialoguesystem
  spec.csharp:
  - uid: com
    name: com
    href: com.html
  - name: .
  - uid: com.absence
    name: absence
    href: com.absence.html
  - name: .
  - uid: com.absence.dialoguesystem
    name: dialoguesystem
    href: com.absence.dialoguesystem.html
  spec.vb:
  - uid: com
    name: com
    href: com.html
  - name: .
  - uid: com.absence
    name: absence
    href: com.absence.html
  - name: .
  - uid: com.absence.dialoguesystem
    name: dialoguesystem
    href: com.absence.dialoguesystem.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}
  commentId: T:com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}
  parent: com.absence.utilities
  definition: com.absence.utilities.StaticInstance`1
  href: com.absence.dialoguesystem.DialogueDisplayer.html
  name: StaticInstance<DialogueDisplayer>
  nameWithType: StaticInstance<DialogueDisplayer>
  fullName: com.absence.utilities.StaticInstance<com.absence.dialoguesystem.DialogueDisplayer>
  nameWithType.vb: StaticInstance(Of DialogueDisplayer)
  fullName.vb: com.absence.utilities.StaticInstance(Of com.absence.dialoguesystem.DialogueDisplayer)
  name.vb: StaticInstance(Of DialogueDisplayer)
  spec.csharp:
  - uid: com.absence.utilities.StaticInstance`1
    name: StaticInstance
    isExternal: true
  - name: <
  - uid: com.absence.dialoguesystem.DialogueDisplayer
    name: DialogueDisplayer
    href: com.absence.dialoguesystem.DialogueDisplayer.html
  - name: '>'
  spec.vb:
  - uid: com.absence.utilities.StaticInstance`1
    name: StaticInstance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: com.absence.dialoguesystem.DialogueDisplayer
    name: DialogueDisplayer
    href: com.absence.dialoguesystem.DialogueDisplayer.html
  - name: )
- uid: com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}
  commentId: T:com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}
  parent: com.absence.utilities
  definition: com.absence.utilities.Singleton`1
  href: com.absence.dialoguesystem.DialogueDisplayer.html
  name: Singleton<DialogueDisplayer>
  nameWithType: Singleton<DialogueDisplayer>
  fullName: com.absence.utilities.Singleton<com.absence.dialoguesystem.DialogueDisplayer>
  nameWithType.vb: Singleton(Of DialogueDisplayer)
  fullName.vb: com.absence.utilities.Singleton(Of com.absence.dialoguesystem.DialogueDisplayer)
  name.vb: Singleton(Of DialogueDisplayer)
  spec.csharp:
  - uid: com.absence.utilities.Singleton`1
    name: Singleton
    isExternal: true
  - name: <
  - uid: com.absence.dialoguesystem.DialogueDisplayer
    name: DialogueDisplayer
    href: com.absence.dialoguesystem.DialogueDisplayer.html
  - name: '>'
  spec.vb:
  - uid: com.absence.utilities.Singleton`1
    name: Singleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: com.absence.dialoguesystem.DialogueDisplayer
    name: DialogueDisplayer
    href: com.absence.dialoguesystem.DialogueDisplayer.html
  - name: )
- uid: com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}.Awake
  commentId: M:com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}.Awake
  parent: com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}
  definition: com.absence.utilities.Singleton`1.Awake
  name: Awake()
  nameWithType: Singleton<DialogueDisplayer>.Awake()
  fullName: com.absence.utilities.Singleton<com.absence.dialoguesystem.DialogueDisplayer>.Awake()
  nameWithType.vb: Singleton(Of DialogueDisplayer).Awake()
  fullName.vb: com.absence.utilities.Singleton(Of com.absence.dialoguesystem.DialogueDisplayer).Awake()
  spec.csharp:
  - uid: com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}.Awake
    name: Awake
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: com.absence.utilities.Singleton{com.absence.dialoguesystem.DialogueDisplayer}.Awake
    name: Awake
    isExternal: true
  - name: (
  - name: )
- uid: com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}.OnApplicationQuit
  commentId: M:com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}.OnApplicationQuit
  parent: com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}
  definition: com.absence.utilities.StaticInstance`1.OnApplicationQuit
  name: OnApplicationQuit()
  nameWithType: StaticInstance<DialogueDisplayer>.OnApplicationQuit()
  fullName: com.absence.utilities.StaticInstance<com.absence.dialoguesystem.DialogueDisplayer>.OnApplicationQuit()
  nameWithType.vb: StaticInstance(Of DialogueDisplayer).OnApplicationQuit()
  fullName.vb: com.absence.utilities.StaticInstance(Of com.absence.dialoguesystem.DialogueDisplayer).OnApplicationQuit()
  spec.csharp:
  - uid: com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}.OnApplicationQuit
    name: OnApplicationQuit
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}.OnApplicationQuit
    name: OnApplicationQuit
    isExternal: true
  - name: (
  - name: )
- uid: com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}.Instance
  commentId: P:com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}.Instance
  parent: com.absence.utilities.StaticInstance{com.absence.dialoguesystem.DialogueDisplayer}
  definition: com.absence.utilities.StaticInstance`1.Instance
  name: Instance
  nameWithType: StaticInstance<DialogueDisplayer>.Instance
  fullName: com.absence.utilities.StaticInstance<com.absence.dialoguesystem.DialogueDisplayer>.Instance
  nameWithType.vb: StaticInstance(Of DialogueDisplayer).Instance
  fullName.vb: com.absence.utilities.StaticInstance(Of com.absence.dialoguesystem.DialogueDisplayer).Instance
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: com.absence.utilities.StaticInstance`1
  commentId: T:com.absence.utilities.StaticInstance`1
  isExternal: true
  name: StaticInstance<T>
  nameWithType: StaticInstance<T>
  fullName: com.absence.utilities.StaticInstance<T>
  nameWithType.vb: StaticInstance(Of T)
  fullName.vb: com.absence.utilities.StaticInstance(Of T)
  name.vb: StaticInstance(Of T)
  spec.csharp:
  - uid: com.absence.utilities.StaticInstance`1
    name: StaticInstance
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: com.absence.utilities.StaticInstance`1
    name: StaticInstance
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: com.absence.utilities
  commentId: N:com.absence.utilities
  isExternal: true
  name: com.absence.utilities
  nameWithType: com.absence.utilities
  fullName: com.absence.utilities
  spec.csharp:
  - uid: com
    name: com
    isExternal: true
  - name: .
  - uid: com.absence
    name: absence
    isExternal: true
  - name: .
  - uid: com.absence.utilities
    name: utilities
    isExternal: true
  spec.vb:
  - uid: com
    name: com
    isExternal: true
  - name: .
  - uid: com.absence
    name: absence
    isExternal: true
  - name: .
  - uid: com.absence.utilities
    name: utilities
    isExternal: true
- uid: com.absence.utilities.Singleton`1
  commentId: T:com.absence.utilities.Singleton`1
  isExternal: true
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: com.absence.utilities.Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: com.absence.utilities.Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: com.absence.utilities.Singleton`1
    name: Singleton
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: com.absence.utilities.Singleton`1
    name: Singleton
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: com.absence.utilities.Singleton`1.Awake
  commentId: M:com.absence.utilities.Singleton`1.Awake
  isExternal: true
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: com.absence.utilities.Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: com.absence.utilities.Singleton(Of T).Awake()
  spec.csharp:
  - uid: com.absence.utilities.Singleton`1.Awake
    name: Awake
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: com.absence.utilities.Singleton`1.Awake
    name: Awake
    isExternal: true
  - name: (
  - name: )
- uid: com.absence.utilities.StaticInstance`1.OnApplicationQuit
  commentId: M:com.absence.utilities.StaticInstance`1.OnApplicationQuit
  isExternal: true
  name: OnApplicationQuit()
  nameWithType: StaticInstance<T>.OnApplicationQuit()
  fullName: com.absence.utilities.StaticInstance<T>.OnApplicationQuit()
  nameWithType.vb: StaticInstance(Of T).OnApplicationQuit()
  fullName.vb: com.absence.utilities.StaticInstance(Of T).OnApplicationQuit()
  spec.csharp:
  - uid: com.absence.utilities.StaticInstance`1.OnApplicationQuit
    name: OnApplicationQuit
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: com.absence.utilities.StaticInstance`1.OnApplicationQuit
    name: OnApplicationQuit
    isExternal: true
  - name: (
  - name: )
- uid: com.absence.utilities.StaticInstance`1.Instance
  commentId: P:com.absence.utilities.StaticInstance`1.Instance
  isExternal: true
  name: Instance
  nameWithType: StaticInstance<T>.Instance
  fullName: com.absence.utilities.StaticInstance<T>.Instance
  nameWithType.vb: StaticInstance(Of T).Instance
  fullName.vb: com.absence.utilities.StaticInstance(Of T).Instance
- uid: com.absence.dialoguesystem.DialogueDisplayer.Occupy*
  commentId: Overload:com.absence.dialoguesystem.DialogueDisplayer.Occupy
  href: com.absence.dialoguesystem.DialogueDisplayer.html#com_absence_dialoguesystem_DialogueDisplayer_Occupy
  name: Occupy
  nameWithType: DialogueDisplayer.Occupy
  fullName: com.absence.dialoguesystem.DialogueDisplayer.Occupy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: com.absence.dialoguesystem.DialogueDisplayer
  commentId: T:com.absence.dialoguesystem.DialogueDisplayer
  href: com.absence.dialoguesystem.DialogueDisplayer.html
  name: DialogueDisplayer
  nameWithType: DialogueDisplayer
  fullName: com.absence.dialoguesystem.DialogueDisplayer
- uid: com.absence.dialoguesystem.DialogueDisplayer.Release*
  commentId: Overload:com.absence.dialoguesystem.DialogueDisplayer.Release
  href: com.absence.dialoguesystem.DialogueDisplayer.html#com_absence_dialoguesystem_DialogueDisplayer_Release
  name: Release
  nameWithType: DialogueDisplayer.Release
  fullName: com.absence.dialoguesystem.DialogueDisplayer.Release
- uid: com.absence.dialoguesystem.DialogueDisplayer.Display*
  commentId: Overload:com.absence.dialoguesystem.DialogueDisplayer.Display
  href: com.absence.dialoguesystem.DialogueDisplayer.html#com_absence_dialoguesystem_DialogueDisplayer_Display_com_absence_personsystem_Person_System_String_
  name: Display
  nameWithType: DialogueDisplayer.Display
  fullName: com.absence.dialoguesystem.DialogueDisplayer.Display
- uid: com.absence.personsystem.Person
  commentId: T:com.absence.personsystem.Person
  parent: com.absence.personsystem
  isExternal: true
  name: Person
  nameWithType: Person
  fullName: com.absence.personsystem.Person
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: com.absence.personsystem
  commentId: N:com.absence.personsystem
  isExternal: true
  name: com.absence.personsystem
  nameWithType: com.absence.personsystem
  fullName: com.absence.personsystem
  spec.csharp:
  - uid: com
    name: com
    isExternal: true
  - name: .
  - uid: com.absence
    name: absence
    isExternal: true
  - name: .
  - uid: com.absence.personsystem
    name: personsystem
    isExternal: true
  spec.vb:
  - uid: com
    name: com
    isExternal: true
  - name: .
  - uid: com.absence
    name: absence
    isExternal: true
  - name: .
  - uid: com.absence.personsystem
    name: personsystem
    isExternal: true
- uid: System.Collections.Generic.List{com.absence.dialoguesystem.internals.Option}
  commentId: T:System.Collections.Generic.List{com.absence.dialoguesystem.internals.Option}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Option>
  nameWithType: List<Option>
  fullName: System.Collections.Generic.List<com.absence.dialoguesystem.internals.Option>
  nameWithType.vb: List(Of Option)
  fullName.vb: System.Collections.Generic.List(Of com.absence.dialoguesystem.internals.Option)
  name.vb: List(Of Option)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: com.absence.dialoguesystem.internals.Option
    name: Option
    href: com.absence.dialoguesystem.internals.Option.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: com.absence.dialoguesystem.internals.Option
    name: Option
    href: com.absence.dialoguesystem.internals.Option.html
  - name: )
- uid: System.Action{System.Int32}
  commentId: T:System.Action{System.Int32}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<int>
  nameWithType: Action<int>
  fullName: System.Action<int>
  nameWithType.vb: Action(Of Integer)
  fullName.vb: System.Action(Of Integer)
  name.vb: Action(Of Integer)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
